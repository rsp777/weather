2023-06-29T10:46:33Z - Starting WeatherApplication using Java 20.0.1 with PID 25708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T10:46:33Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T10:46:33Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-29T10:46:34Z - Tomcat initialized with port(s): 8090 (http)
2023-06-29T10:46:34Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:46:34Z - Starting service [Tomcat]
2023-06-29T10:46:34Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T10:46:34Z - Initializing Spring embedded WebApplicationContext
2023-06-29T10:46:34Z - Root WebApplicationContext: initialization completed in 1077 ms
2023-06-29T10:46:34Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T10:46:34Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T10:46:34Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T10:46:35Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T10:46:35Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T10:46:35Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T10:46:35Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T10:46:35Z - LiveReload server is running on port 35729
2023-06-29T10:46:35Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T10:46:35Z - Starting ProtocolHandler ["http-nio-8090"]
2023-06-29T10:46:35Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-06-29T10:46:35Z - Started WeatherApplication in 2.144 seconds (process running for 2.789)
2023-06-29T10:46:36Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-29T10:46:36Z - Initializing Servlet 'dispatcherServlet'
2023-06-29T10:46:36Z - Detected StandardServletMultipartResolver
2023-06-29T10:46:36Z - Detected AcceptHeaderLocaleResolver
2023-06-29T10:46:36Z - Detected FixedThemeResolver
2023-06-29T10:46:36Z - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@61d6c875
2023-06-29T10:46:36Z - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5144330c
2023-06-29T10:46:36Z - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-06-29T10:46:36Z - Completed initialization in 2 ms
2023-06-29T10:46:58Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-06-29T10:46:58Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:46:58Z - Stopping service [Tomcat]
2023-06-29T10:46:58Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-06-29T10:46:58Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-06-29T10:46:58Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-06-29T10:46:58Z - Starting WeatherApplication using Java 20.0.1 with PID 25708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T10:46:58Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T10:46:58Z - Tomcat initialized with port(s): 8082 (http)
2023-06-29T10:46:58Z - Initializing ProtocolHandler ["http-nio-8082"]
2023-06-29T10:46:58Z - Starting service [Tomcat]
2023-06-29T10:46:58Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T10:46:58Z - Initializing Spring embedded WebApplicationContext
2023-06-29T10:46:58Z - Root WebApplicationContext: initialization completed in 326 ms
2023-06-29T10:46:58Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T10:46:58Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T10:46:58Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T10:46:58Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T10:46:58Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T10:46:58Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T10:46:58Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T10:46:58Z - LiveReload server is running on port 35729
2023-06-29T10:46:58Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T10:46:58Z - Starting ProtocolHandler ["http-nio-8082"]
2023-06-29T10:46:58Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2023-06-29T10:46:58Z - Pausing ProtocolHandler ["http-nio-8082"]
2023-06-29T10:46:58Z - Stopping service [Tomcat]
2023-06-29T10:46:58Z - Stopping ProtocolHandler ["http-nio-8082"]
2023-06-29T10:46:58Z - Destroying ProtocolHandler ["http-nio-8082"]
2023-06-29T10:46:58Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-06-29T10:46:58Z - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8082 was already in use.

Action:

Identify and stop the process that's listening on port 8082 or configure this application to listen on another port.

2023-06-29T10:47:09Z - Starting WeatherApplication using Java 20.0.1 with PID 25708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T10:47:09Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T10:47:09Z - Tomcat initialized with port(s): 8090 (http)
2023-06-29T10:47:09Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:47:09Z - Starting service [Tomcat]
2023-06-29T10:47:09Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T10:47:09Z - Initializing Spring embedded WebApplicationContext
2023-06-29T10:47:09Z - Root WebApplicationContext: initialization completed in 235 ms
2023-06-29T10:47:09Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T10:47:09Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T10:47:09Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T10:47:09Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T10:47:09Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T10:47:09Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T10:47:09Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T10:47:09Z - LiveReload server is running on port 35729
2023-06-29T10:47:09Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T10:47:09Z - Starting ProtocolHandler ["http-nio-8090"]
2023-06-29T10:47:09Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-06-29T10:47:09Z - Started WeatherApplication in 0.443 seconds (process running for 37.364)
2023-06-29T10:47:09Z - Condition evaluation unchanged
2023-06-29T10:47:15Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-29T10:47:15Z - Initializing Servlet 'dispatcherServlet'
2023-06-29T10:47:15Z - Detected StandardServletMultipartResolver
2023-06-29T10:47:15Z - Detected AcceptHeaderLocaleResolver
2023-06-29T10:47:15Z - Detected FixedThemeResolver
2023-06-29T10:47:15Z - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1f945587
2023-06-29T10:47:15Z - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6011944a
2023-06-29T10:47:15Z - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-06-29T10:47:15Z - Completed initialization in 1 ms
2023-06-29T10:47:15Z - GET "/weather/vidisha", parameters={}
2023-06-29T10:47:15Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T10:47:15Z - Rest URL : http://api.openweathermap.org/data/2.5/weather?q=vidisha&appid=f777fa895ebe5cb38334176de19e5693&units=metric&lang=en
2023-06-29T10:47:15Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T10:47:15Z - Weather fetched for Vidisha
2023-06-29T10:47:15Z - Status : 200
2023-06-29T10:47:15Z - Rest URL : http://api.openweathermap.org/data/2.5/weather?q=vidisha&appid=f777fa895ebe5cb38334176de19e5693&units=metric&lang=en
2023-06-29T10:47:15Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T10:47:15Z - Weather fetched for Vidisha
2023-06-29T10:47:15Z - Status : 200
2023-06-29T10:47:15Z - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.16, feels_like=33.78, temp_min=30.16, temp_max=30.16, pressure=1004, humidity=63, sea_level=1004.0, grnd_level=957.0], visibility=10000, wind=Wind {speed=6.59, deg=272, gust=7.52}, clouds=Clouds [all=97], rain=null, snow=null, dt=1688015589, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T10:47:15Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T10:47:15Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T10:47:15Z - Completed 200 OK
2023-06-29T10:48:53Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-06-29T10:48:53Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:48:53Z - Stopping service [Tomcat]
2023-06-29T10:48:53Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-06-29T10:48:53Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-06-29T10:48:53Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-06-29T10:48:53Z - Starting WeatherApplication using Java 20.0.1 with PID 25708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T10:48:53Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T10:48:53Z - Tomcat initialized with port(s): 8090 (http)
2023-06-29T10:48:53Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:48:53Z - Starting service [Tomcat]
2023-06-29T10:48:53Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T10:48:53Z - Initializing Spring embedded WebApplicationContext
2023-06-29T10:48:53Z - Root WebApplicationContext: initialization completed in 222 ms
2023-06-29T10:48:53Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T10:48:53Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T10:48:53Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T10:48:53Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T10:48:53Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T10:48:53Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T10:48:53Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T10:48:53Z - LiveReload server is running on port 35729
2023-06-29T10:48:53Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T10:48:53Z - Starting ProtocolHandler ["http-nio-8090"]
2023-06-29T10:48:53Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-06-29T10:48:53Z - Started WeatherApplication in 0.377 seconds (process running for 141.276)
2023-06-29T10:48:53Z - Condition evaluation unchanged
2023-06-29T10:49:04Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-29T10:49:04Z - Initializing Servlet 'dispatcherServlet'
2023-06-29T10:49:04Z - Detected StandardServletMultipartResolver
2023-06-29T10:49:04Z - Detected AcceptHeaderLocaleResolver
2023-06-29T10:49:04Z - Detected FixedThemeResolver
2023-06-29T10:49:04Z - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@f25a7a9
2023-06-29T10:49:04Z - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1e2483d
2023-06-29T10:49:04Z - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-06-29T10:49:04Z - Completed initialization in 1 ms
2023-06-29T10:49:04Z - GET "/weather/vidisha", parameters={}
2023-06-29T10:49:04Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T10:49:04Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T10:49:04Z - Weather fetched for Vidisha
2023-06-29T10:49:04Z - Status : 200
2023-06-29T10:49:04Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T10:49:04Z - Weather fetched for Vidisha
2023-06-29T10:49:04Z - Status : 200
2023-06-29T10:49:04Z - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.16, feels_like=33.78, temp_min=30.16, temp_max=30.16, pressure=1004, humidity=63, sea_level=1004.0, grnd_level=957.0], visibility=10000, wind=Wind {speed=6.59, deg=272, gust=7.52}, clouds=Clouds [all=97], rain=null, snow=null, dt=1688015589, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T10:49:04Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T10:49:04Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T10:49:04Z - Completed 200 OK
2023-06-29T10:56:14Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-06-29T10:56:14Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:56:14Z - Stopping service [Tomcat]
2023-06-29T10:56:14Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-06-29T10:56:14Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-06-29T10:56:14Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-06-29T10:56:14Z - Application run failed
java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.pattern.parser.Compiler@6c75bbe6 - There is no conversion class registered for conversion word [weatherapp]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@6c75bbe6 - [weatherapp] is not a valid conversion word
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:356)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.pattern.parser.Compiler@6c75bbe6 - There is no conversion class registered for conversion word [weatherapp]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@6c75bbe6 - [weatherapp] is not a valid conversion word
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:260)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:247)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:80)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:60)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:187)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)
	... 22 common frames omitted
2023-06-29T10:56:50Z - Starting WeatherApplication using Java 20.0.1 with PID 25708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T10:56:50Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T10:56:50Z - Tomcat initialized with port(s): 8090 (http)
2023-06-29T10:56:50Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:56:50Z - Starting service [Tomcat]
2023-06-29T10:56:50Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T10:56:50Z - Initializing Spring embedded WebApplicationContext
2023-06-29T10:56:50Z - Root WebApplicationContext: initialization completed in 222 ms
2023-06-29T10:56:50Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T10:56:50Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T10:56:50Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T10:56:50Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T10:56:50Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T10:56:50Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T10:56:50Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T10:56:50Z - LiveReload server is running on port 35729
2023-06-29T10:56:50Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T10:56:50Z - Starting ProtocolHandler ["http-nio-8090"]
2023-06-29T10:56:50Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-06-29T10:56:50Z - Started WeatherApplication in 0.415 seconds (process running for 618.372)
2023-06-29T10:56:50Z - Condition evaluation unchanged
2023-06-29T10:59:20Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-06-29T10:59:20Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:20Z - Stopping service [Tomcat]
2023-06-29T10:59:20Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:20Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:20Z - Starting WeatherApplication using Java 20.0.1 with PID 25708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T10:59:20Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T10:59:20Z - Tomcat initialized with port(s): 8090 (http)
2023-06-29T10:59:20Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:20Z - Starting service [Tomcat]
2023-06-29T10:59:20Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T10:59:20Z - Initializing Spring embedded WebApplicationContext
2023-06-29T10:59:20Z - Root WebApplicationContext: initialization completed in 206 ms
2023-06-29T10:59:20Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T10:59:20Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T10:59:20Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T10:59:20Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T10:59:20Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T10:59:20Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T10:59:20Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T10:59:20Z - LiveReload server is running on port 35729
2023-06-29T10:59:20Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T10:59:20Z - Starting ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:20Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-06-29T10:59:20Z - Started WeatherApplication in 0.355 seconds (process running for 768.344)
2023-06-29T10:59:20Z - Condition evaluation unchanged
2023-06-29T10:59:25Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-06-29T10:59:25Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:25Z - Stopping service [Tomcat]
2023-06-29T10:59:25Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:25Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:25Z - Starting WeatherApplication using Java 20.0.1 with PID 25708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T10:59:25Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T10:59:25Z - Tomcat initialized with port(s): 8090 (http)
2023-06-29T10:59:25Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:25Z - Starting service [Tomcat]
2023-06-29T10:59:25Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T10:59:25Z - Initializing Spring embedded WebApplicationContext
2023-06-29T10:59:25Z - Root WebApplicationContext: initialization completed in 200 ms
2023-06-29T10:59:25Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T10:59:25Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T10:59:25Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T10:59:25Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T10:59:25Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T10:59:25Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T10:59:25Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T10:59:25Z - LiveReload server is running on port 35729
2023-06-29T10:59:25Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T10:59:25Z - Starting ProtocolHandler ["http-nio-8090"]
2023-06-29T10:59:25Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-06-29T10:59:25Z - Started WeatherApplication in 0.34 seconds (process running for 773.225)
2023-06-29T10:59:25Z - Condition evaluation unchanged
2023-06-29T10:59:33Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-29T10:59:33Z - Initializing Servlet 'dispatcherServlet'
2023-06-29T10:59:33Z - Detected StandardServletMultipartResolver
2023-06-29T10:59:33Z - Detected AcceptHeaderLocaleResolver
2023-06-29T10:59:33Z - Detected FixedThemeResolver
2023-06-29T10:59:33Z - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2b94caa9
2023-06-29T10:59:33Z - Detected org.springframework.web.servlet.support.SessionFlashMapManager@255331ab
2023-06-29T10:59:33Z - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-06-29T10:59:33Z - Completed initialization in 0 ms
2023-06-29T10:59:33Z - GET "/weather/vidisha", parameters={}
2023-06-29T10:59:33Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T10:59:33Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T10:59:33Z - Weather fetched for Vidisha
2023-06-29T10:59:33Z - Status : 200
2023-06-29T10:59:33Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T10:59:33Z - Weather fetched for Vidisha
2023-06-29T10:59:33Z - Status : 200
2023-06-29T10:59:33Z - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.16, feels_like=33.78, temp_min=30.16, temp_max=30.16, pressure=1004, humidity=63, sea_level=1004.0, grnd_level=957.0], visibility=10000, wind=Wind {speed=6.59, deg=272, gust=7.52}, clouds=Clouds [all=97], rain=null, snow=null, dt=1688016524, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T10:59:33Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T10:59:33Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T10:59:33Z - Completed 200 OK
2023-06-29T10:59:49Z - GET "/weather/vidisha", parameters={}
2023-06-29T10:59:49Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T10:59:49Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T10:59:49Z - Weather fetched for Vidisha
2023-06-29T10:59:49Z - Status : 200
2023-06-29T10:59:49Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T10:59:49Z - Weather fetched for Vidisha
2023-06-29T10:59:49Z - Status : 200
2023-06-29T10:59:49Z - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.16, feels_like=33.78, temp_min=30.16, temp_max=30.16, pressure=1004, humidity=63, sea_level=1004.0, grnd_level=957.0], visibility=10000, wind=Wind {speed=6.59, deg=272, gust=7.52}, clouds=Clouds [all=97], rain=null, snow=null, dt=1688016524, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T10:59:49Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T10:59:49Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T10:59:49Z - Completed 200 OK
2023-06-29T11:00:28Z - Application shutdown requested.
2023-06-29T11:00:28Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-06-29T11:00:28Z - Stopping service [Tomcat]
2023-06-29T11:00:28Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-06-29T11:00:28Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-06-29T11:00:28Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-06-29T11:07:03Z - Starting WeatherApplication using Java 20.0.1 with PID 38008 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T11:07:03Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T11:07:03Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-29T11:07:04Z - Tomcat initialized with port(s): 8090 (http)
2023-06-29T11:07:04Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-06-29T11:07:04Z - Starting service [Tomcat]
2023-06-29T11:07:04Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T11:07:04Z - Initializing Spring embedded WebApplicationContext
2023-06-29T11:07:04Z - Root WebApplicationContext: initialization completed in 1763 ms
2023-06-29T11:07:05Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T11:07:05Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T11:07:05Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T11:07:05Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T11:07:05Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T11:07:05Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T11:07:05Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T11:07:05Z - Unable to start LiveReload server
2023-06-29T11:07:05Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T11:07:05Z - Starting ProtocolHandler ["http-nio-8090"]
2023-06-29T11:07:06Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-06-29T11:07:06Z - Started WeatherApplication in 3.28 seconds (process running for 4.411)
2023-06-29T11:07:07Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-29T11:07:07Z - Initializing Servlet 'dispatcherServlet'
2023-06-29T11:07:07Z - Detected StandardServletMultipartResolver
2023-06-29T11:07:07Z - Detected AcceptHeaderLocaleResolver
2023-06-29T11:07:07Z - Detected FixedThemeResolver
2023-06-29T11:07:07Z - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@dc9b4ae
2023-06-29T11:07:07Z - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5dd71d6e
2023-06-29T11:07:07Z - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-06-29T11:07:07Z - Completed initialization in 2 ms
2023-06-29T11:07:20Z - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2023-06-29T11:07:20Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-06-29T11:07:20Z - Stopping service [Tomcat]
2023-06-29T11:07:20Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-06-29T11:07:20Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-06-29T11:07:20Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-06-29T11:07:20Z - Starting WeatherApplication using Java 20.0.1 with PID 38008 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-06-29T11:07:20Z - No active profile set, falling back to 1 default profile: "default"
2023-06-29T11:07:20Z - Tomcat initialized with port(s): 8090 (http)
2023-06-29T11:07:20Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-06-29T11:07:20Z - Starting service [Tomcat]
2023-06-29T11:07:20Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-06-29T11:07:20Z - Initializing Spring embedded WebApplicationContext
2023-06-29T11:07:20Z - Root WebApplicationContext: initialization completed in 239 ms
2023-06-29T11:07:20Z - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2023-06-29T11:07:20Z - Mapping servlets: dispatcherServlet urls=[/]
2023-06-29T11:07:21Z - Filter 'webMvcObservationFilter' configured for use
2023-06-29T11:07:21Z - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-06-29T11:07:21Z - 5 mappings in 'requestMappingHandlerMapping'
2023-06-29T11:07:21Z - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-06-29T11:07:21Z - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2023-06-29T11:07:21Z - Unable to start LiveReload server
2023-06-29T11:07:21Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-06-29T11:07:21Z - Starting ProtocolHandler ["http-nio-8090"]
2023-06-29T11:07:21Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-06-29T11:07:21Z - Started WeatherApplication in 0.417 seconds (process running for 19.508)
2023-06-29T11:07:21Z - Condition evaluation unchanged
2023-06-29T11:41:07Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-29T11:41:07Z - Initializing Servlet 'dispatcherServlet'
2023-06-29T11:41:07Z - Detected StandardServletMultipartResolver
2023-06-29T11:41:07Z - Detected AcceptHeaderLocaleResolver
2023-06-29T11:41:07Z - Detected FixedThemeResolver
2023-06-29T11:41:07Z - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@754c40bb
2023-06-29T11:41:07Z - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6febbf17
2023-06-29T11:41:07Z - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-06-29T11:41:07Z - Completed initialization in 1 ms
2023-06-29T11:41:07Z - GET "/weather/Vidisha", parameters={}
2023-06-29T11:41:07Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:41:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:41:08Z - Weather fetched for Vidisha
2023-06-29T11:41:08Z - Status : 200
2023-06-29T11:41:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:41:08Z - Weather fetched for Vidisha
2023-06-29T11:41:08Z - Status : 200
2023-06-29T11:41:08Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.73, feels_like=34.52, temp_min=30.73, temp_max=30.73, pressure=1002, humidity=61, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=5.88, deg=264, gust=6.59}, clouds=Clouds [all=99], rain=null, snow=null, dt=1688019068, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:41:08Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:41:08Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T11:41:08Z - Completed 200 OK
2023-06-29T11:45:17Z - GET "/weather/Vidisha", parameters={}
2023-06-29T11:45:17Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:45:17Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:45:17Z - Weather fetched for Vidisha
2023-06-29T11:45:17Z - Status : 200
2023-06-29T11:45:17Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:45:17Z - Weather fetched for Vidisha
2023-06-29T11:45:17Z - Status : 200
2023-06-29T11:45:17Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.73, feels_like=34.52, temp_min=30.73, temp_max=30.73, pressure=1002, humidity=61, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=5.88, deg=264, gust=6.59}, clouds=Clouds [all=99], rain=null, snow=null, dt=1688019068, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:45:17Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:45:17Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T11:45:17Z - Completed 200 OK
2023-06-29T11:46:16Z - GET "/weather/Vidisha", parameters={}
2023-06-29T11:46:16Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:16Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:16Z - Weather fetched for Vidisha
2023-06-29T11:46:16Z - Status : 200
2023-06-29T11:46:16Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:16Z - Weather fetched for Vidisha
2023-06-29T11:46:16Z - Status : 200
2023-06-29T11:46:16Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.73, feels_like=34.52, temp_min=30.73, temp_max=30.73, pressure=1002, humidity=61, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=5.88, deg=264, gust=6.59}, clouds=Clouds [all=99], rain=null, snow=null, dt=1688019068, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:16Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:16Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T11:46:16Z - Completed 200 OK
2023-06-29T11:46:48Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:48Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:48Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:48Z - Weather fetched for Bengaluru
2023-06-29T11:46:48Z - Status : 200
2023-06-29T11:46:48Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:48Z - Weather fetched for Bengaluru
2023-06-29T11:46:48Z - Status : 200
2023-06-29T11:46:48Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:48Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:48Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:48Z - Completed 200 OK
2023-06-29T11:46:50Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:50Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:50Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:50Z - Weather fetched for Bengaluru
2023-06-29T11:46:50Z - Status : 200
2023-06-29T11:46:50Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:50Z - Weather fetched for Bengaluru
2023-06-29T11:46:50Z - Status : 200
2023-06-29T11:46:50Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:50Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:50Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:50Z - Completed 200 OK
2023-06-29T11:46:51Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:51Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:51Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:51Z - Weather fetched for Bengaluru
2023-06-29T11:46:51Z - Status : 200
2023-06-29T11:46:51Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:51Z - Weather fetched for Bengaluru
2023-06-29T11:46:51Z - Status : 200
2023-06-29T11:46:51Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:51Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:51Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:51Z - Completed 200 OK
2023-06-29T11:46:52Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:52Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:52Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:52Z - Weather fetched for Bengaluru
2023-06-29T11:46:52Z - Status : 200
2023-06-29T11:46:52Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:52Z - Weather fetched for Bengaluru
2023-06-29T11:46:52Z - Status : 200
2023-06-29T11:46:52Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:52Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:52Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:52Z - Completed 200 OK
2023-06-29T11:46:53Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:53Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:53Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:53Z - Weather fetched for Bengaluru
2023-06-29T11:46:53Z - Status : 200
2023-06-29T11:46:53Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:53Z - Weather fetched for Bengaluru
2023-06-29T11:46:53Z - Status : 200
2023-06-29T11:46:53Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:53Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:53Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:53Z - Completed 200 OK
2023-06-29T11:46:53Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:53Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:53Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:53Z - Weather fetched for Bengaluru
2023-06-29T11:46:53Z - Status : 200
2023-06-29T11:46:53Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:53Z - Weather fetched for Bengaluru
2023-06-29T11:46:53Z - Status : 200
2023-06-29T11:46:53Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:53Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:53Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:53Z - Completed 200 OK
2023-06-29T11:46:53Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:53Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:53Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:53Z - Weather fetched for Bengaluru
2023-06-29T11:46:53Z - Status : 200
2023-06-29T11:46:53Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:53Z - Weather fetched for Bengaluru
2023-06-29T11:46:53Z - Status : 200
2023-06-29T11:46:53Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:53Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:53Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:53Z - Completed 200 OK
2023-06-29T11:46:54Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:54Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:54Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:54Z - Weather fetched for Bengaluru
2023-06-29T11:46:54Z - Status : 200
2023-06-29T11:46:54Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:54Z - Weather fetched for Bengaluru
2023-06-29T11:46:54Z - Status : 200
2023-06-29T11:46:54Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:54Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:54Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:54Z - Completed 200 OK
2023-06-29T11:46:54Z - GET "/weather/bengaluru", parameters={}
2023-06-29T11:46:54Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T11:46:54Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:54Z - Weather fetched for Bengaluru
2023-06-29T11:46:54Z - Status : 200
2023-06-29T11:46:54Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T11:46:54Z - Weather fetched for Bengaluru
2023-06-29T11:46:54Z - Status : 200
2023-06-29T11:46:54Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688019249, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T11:46:54Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T11:46:54Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T11:46:54Z - Completed 200 OK
2023-06-29T12:07:41Z - GET "/weather/bengaluru", parameters={}
2023-06-29T12:07:41Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:07:42Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:07:42Z - Weather fetched for Bengaluru
2023-06-29T12:07:42Z - Status : 200
2023-06-29T12:07:42Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:07:42Z - Weather fetched for Bengaluru
2023-06-29T12:07:42Z - Status : 200
2023-06-29T12:07:42Z - getWeatherInfo(bengaluru) : WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, description=scattered clouds, icon=03d]], base=stations, main=Main [temp=27.86, feels_like=29.46, temp_min=26.9, temp_max=27.9, pressure=1015, humidity=62, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=6.69, deg=240, gust=null}, clouds=Clouds [all=40], rain=null, snow=null, dt=1688020010, sys=Sys [type=2, id=2017753, country=IN, sunrise=1687998380, sunset=1688044756, pod=null], timezone=19800, id=1277333, name=Bengaluru, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:07:42Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:07:42Z - Writing [WeatherInfo [coord=Coord [lon=77.6033, lat=12.9762], weather=[Weather [id=802, main=Clouds, descript (truncated)...]
2023-06-29T12:07:42Z - Completed 200 OK
2023-06-29T12:08:32Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:08:32Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:08:32Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:08:32Z - Weather fetched for Vidisha
2023-06-29T12:08:32Z - Status : 200
2023-06-29T12:08:32Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:08:32Z - Weather fetched for Vidisha
2023-06-29T12:08:32Z - Status : 200
2023-06-29T12:08:32Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688020712, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:08:32Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:08:32Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:08:32Z - Completed 200 OK
2023-06-29T12:09:08Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:09:08Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:09:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:09:08Z - Weather fetched for Vidisha
2023-06-29T12:09:08Z - Status : 200
2023-06-29T12:09:09Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:09:09Z - Weather fetched for Vidisha
2023-06-29T12:09:09Z - Status : 200
2023-06-29T12:09:09Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688020712, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:09:09Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:09:09Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:09:09Z - Completed 200 OK
2023-06-29T12:11:55Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:11:55Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:11:55Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:11:55Z - Weather fetched for Vidisha
2023-06-29T12:11:55Z - Status : 200
2023-06-29T12:11:55Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:11:55Z - Weather fetched for Vidisha
2023-06-29T12:11:55Z - Status : 200
2023-06-29T12:11:55Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688020712, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:11:55Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:11:55Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:11:55Z - Completed 200 OK
2023-06-29T12:12:13Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:12:13Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:12:13Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:12:13Z - Weather fetched for Vidisha
2023-06-29T12:12:13Z - Status : 200
2023-06-29T12:12:13Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:12:13Z - Weather fetched for Vidisha
2023-06-29T12:12:13Z - Status : 200
2023-06-29T12:12:13Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688020712, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:12:13Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:12:13Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:12:13Z - Completed 200 OK
2023-06-29T12:12:17Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:12:17Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:12:17Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:12:17Z - Weather fetched for Vidisha
2023-06-29T12:12:17Z - Status : 200
2023-06-29T12:12:17Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:12:17Z - Weather fetched for Vidisha
2023-06-29T12:12:17Z - Status : 200
2023-06-29T12:12:17Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688020712, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:12:17Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:12:17Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:12:17Z - Completed 200 OK
2023-06-29T12:12:43Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:12:43Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:12:43Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:12:43Z - Weather fetched for Vidisha
2023-06-29T12:12:43Z - Status : 200
2023-06-29T12:12:43Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:12:43Z - Weather fetched for Vidisha
2023-06-29T12:12:43Z - Status : 200
2023-06-29T12:12:43Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688020712, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:12:43Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:12:43Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:12:43Z - Completed 200 OK
2023-06-29T12:39:11Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:39:11Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:39:11Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:39:11Z - Weather fetched for Vidisha
2023-06-29T12:39:11Z - Status : 200
2023-06-29T12:39:12Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:39:12Z - Weather fetched for Vidisha
2023-06-29T12:39:12Z - Status : 200
2023-06-29T12:39:12Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688022552, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:39:12Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:39:12Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:39:12Z - Completed 200 OK
2023-06-29T12:44:35Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:44:35Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:44:35Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:44:35Z - Weather fetched for Vidisha
2023-06-29T12:44:35Z - Status : 200
2023-06-29T12:44:35Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:44:35Z - Weather fetched for Vidisha
2023-06-29T12:44:35Z - Status : 200
2023-06-29T12:44:35Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688022552, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:44:35Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:44:35Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:44:35Z - Completed 200 OK
2023-06-29T12:51:47Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:51:47Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:51:47Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:51:47Z - Weather fetched for Vidisha
2023-06-29T12:51:47Z - Status : 200
2023-06-29T12:51:47Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:51:47Z - Weather fetched for Vidisha
2023-06-29T12:51:47Z - Status : 200
2023-06-29T12:51:47Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:51:47Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:51:47Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:51:47Z - Completed 200 OK
2023-06-29T12:53:49Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:53:49Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:53:49Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:53:49Z - Weather fetched for Vidisha
2023-06-29T12:53:49Z - Status : 200
2023-06-29T12:53:49Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:53:49Z - Weather fetched for Vidisha
2023-06-29T12:53:49Z - Status : 200
2023-06-29T12:53:49Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:53:49Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:53:49Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:53:49Z - Completed 200 OK
2023-06-29T12:54:03Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:54:03Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:54:03Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:54:03Z - Weather fetched for Vidisha
2023-06-29T12:54:03Z - Status : 200
2023-06-29T12:54:03Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:54:03Z - Weather fetched for Vidisha
2023-06-29T12:54:03Z - Status : 200
2023-06-29T12:54:03Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:54:03Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:54:03Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:54:03Z - Completed 200 OK
2023-06-29T12:54:28Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:54:28Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:54:28Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:54:28Z - Weather fetched for Vidisha
2023-06-29T12:54:28Z - Status : 200
2023-06-29T12:54:28Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:54:28Z - Weather fetched for Vidisha
2023-06-29T12:54:28Z - Status : 200
2023-06-29T12:54:28Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:54:28Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:54:28Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:54:28Z - Completed 200 OK
2023-06-29T12:54:58Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:54:58Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:54:58Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:54:58Z - Weather fetched for Vidisha
2023-06-29T12:54:58Z - Status : 200
2023-06-29T12:54:58Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:54:58Z - Weather fetched for Vidisha
2023-06-29T12:54:58Z - Status : 200
2023-06-29T12:54:58Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:54:58Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:54:58Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:54:58Z - Completed 200 OK
2023-06-29T12:55:08Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:55:08Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:55:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:08Z - Weather fetched for Vidisha
2023-06-29T12:55:08Z - Status : 200
2023-06-29T12:55:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:08Z - Weather fetched for Vidisha
2023-06-29T12:55:08Z - Status : 200
2023-06-29T12:55:08Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:55:08Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:55:08Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:55:08Z - Completed 200 OK
2023-06-29T12:55:12Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:55:12Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:55:12Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:12Z - Weather fetched for Vidisha
2023-06-29T12:55:12Z - Status : 200
2023-06-29T12:55:12Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:12Z - Weather fetched for Vidisha
2023-06-29T12:55:12Z - Status : 200
2023-06-29T12:55:12Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:55:12Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:55:12Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:55:12Z - Completed 200 OK
2023-06-29T12:55:28Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:55:28Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:55:28Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:28Z - Weather fetched for Vidisha
2023-06-29T12:55:28Z - Status : 200
2023-06-29T12:55:28Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:28Z - Weather fetched for Vidisha
2023-06-29T12:55:28Z - Status : 200
2023-06-29T12:55:28Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:55:28Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:55:28Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:55:28Z - Completed 200 OK
2023-06-29T12:55:40Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:55:40Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:55:40Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:40Z - Weather fetched for Vidisha
2023-06-29T12:55:40Z - Status : 200
2023-06-29T12:55:40Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:40Z - Weather fetched for Vidisha
2023-06-29T12:55:40Z - Status : 200
2023-06-29T12:55:40Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:55:40Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:55:40Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:55:40Z - Completed 200 OK
2023-06-29T12:55:55Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:55:55Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:55:55Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:55Z - Weather fetched for Vidisha
2023-06-29T12:55:55Z - Status : 200
2023-06-29T12:55:55Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:55:55Z - Weather fetched for Vidisha
2023-06-29T12:55:55Z - Status : 200
2023-06-29T12:55:55Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:55:55Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:55:55Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:55:55Z - Completed 200 OK
2023-06-29T12:56:08Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:56:08Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:56:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:56:08Z - Weather fetched for Vidisha
2023-06-29T12:56:08Z - Status : 200
2023-06-29T12:56:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:56:08Z - Weather fetched for Vidisha
2023-06-29T12:56:08Z - Status : 200
2023-06-29T12:56:08Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:56:08Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:56:08Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:56:08Z - Completed 200 OK
2023-06-29T12:56:52Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:56:52Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:56:52Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:56:52Z - Weather fetched for Vidisha
2023-06-29T12:56:52Z - Status : 200
2023-06-29T12:56:52Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:56:52Z - Weather fetched for Vidisha
2023-06-29T12:56:52Z - Status : 200
2023-06-29T12:56:52Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:56:52Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:56:52Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:56:52Z - Completed 200 OK
2023-06-29T12:57:14Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:57:14Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:57:14Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:57:14Z - Weather fetched for Vidisha
2023-06-29T12:57:14Z - Status : 200
2023-06-29T12:57:14Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:57:14Z - Weather fetched for Vidisha
2023-06-29T12:57:14Z - Status : 200
2023-06-29T12:57:14Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:57:14Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:57:14Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:57:14Z - Completed 200 OK
2023-06-29T12:58:19Z - GET "/weather/Vidisha", parameters={}
2023-06-29T12:58:19Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T12:58:19Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:58:19Z - Weather fetched for Vidisha
2023-06-29T12:58:19Z - Status : 200
2023-06-29T12:58:19Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T12:58:19Z - Weather fetched for Vidisha
2023-06-29T12:58:19Z - Status : 200
2023-06-29T12:58:19Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T12:58:19Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T12:58:19Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T12:58:19Z - Completed 200 OK
2023-06-29T13:00:25Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:00:25Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:00:26Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:00:26Z - Weather fetched for Vidisha
2023-06-29T13:00:26Z - Status : 200
2023-06-29T13:00:26Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:00:26Z - Weather fetched for Vidisha
2023-06-29T13:00:26Z - Status : 200
2023-06-29T13:00:26Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:00:26Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:00:26Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:00:26Z - Completed 200 OK
2023-06-29T13:01:30Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:01:30Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:01:30Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:01:30Z - Weather fetched for Vidisha
2023-06-29T13:01:30Z - Status : 200
2023-06-29T13:01:30Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:01:30Z - Weather fetched for Vidisha
2023-06-29T13:01:30Z - Status : 200
2023-06-29T13:01:30Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=31.52, feels_like=35.17, temp_min=31.52, temp_max=31.52, pressure=1001, humidity=57, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.64, deg=261, gust=6.35}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688023308, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:01:30Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:01:30Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:01:30Z - Completed 200 OK
2023-06-29T13:03:25Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:03:25Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:03:25Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:03:25Z - Weather fetched for Vidisha
2023-06-29T13:03:25Z - Status : 200
2023-06-29T13:03:25Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:03:25Z - Weather fetched for Vidisha
2023-06-29T13:03:25Z - Status : 200
2023-06-29T13:03:25Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.22, feels_like=35.55, temp_min=32.22, temp_max=32.22, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=5.54, deg=254, gust=6.09}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688024006, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:03:25Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:03:25Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:03:25Z - Completed 200 OK
2023-06-29T13:03:46Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:03:46Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:03:46Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:03:46Z - Weather fetched for Vidisha
2023-06-29T13:03:46Z - Status : 200
2023-06-29T13:03:46Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:03:46Z - Weather fetched for Vidisha
2023-06-29T13:03:46Z - Status : 200
2023-06-29T13:03:46Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.22, feels_like=35.55, temp_min=32.22, temp_max=32.22, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=5.54, deg=254, gust=6.09}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688024006, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:03:46Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:03:46Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:03:46Z - Completed 200 OK
2023-06-29T13:04:09Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:04:09Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:04:10Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:04:10Z - Weather fetched for Vidisha
2023-06-29T13:04:10Z - Status : 200
2023-06-29T13:04:10Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:04:10Z - Weather fetched for Vidisha
2023-06-29T13:04:10Z - Status : 200
2023-06-29T13:04:10Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.22, feels_like=35.55, temp_min=32.22, temp_max=32.22, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=5.54, deg=254, gust=6.09}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688024006, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:04:10Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:04:10Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:04:10Z - Completed 200 OK
2023-06-29T13:11:52Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:11:52Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:11:52Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:11:52Z - Weather fetched for Vidisha
2023-06-29T13:11:52Z - Status : 200
2023-06-29T13:11:52Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:11:52Z - Weather fetched for Vidisha
2023-06-29T13:11:52Z - Status : 200
2023-06-29T13:11:52Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.22, feels_like=35.55, temp_min=32.22, temp_max=32.22, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=5.54, deg=254, gust=6.09}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688024006, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:11:52Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:11:52Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:11:52Z - Completed 200 OK
2023-06-29T13:12:02Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:12:02Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:12:02Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:12:02Z - Weather fetched for Vidisha
2023-06-29T13:12:02Z - Status : 200
2023-06-29T13:12:02Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:12:02Z - Weather fetched for Vidisha
2023-06-29T13:12:02Z - Status : 200
2023-06-29T13:12:02Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.22, feels_like=35.55, temp_min=32.22, temp_max=32.22, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=5.54, deg=254, gust=6.09}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688024006, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:12:02Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:12:02Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:12:02Z - Completed 200 OK
2023-06-29T13:12:19Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:12:19Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:12:19Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:12:19Z - Weather fetched for Vidisha
2023-06-29T13:12:19Z - Status : 200
2023-06-29T13:12:19Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:12:19Z - Weather fetched for Vidisha
2023-06-29T13:12:19Z - Status : 200
2023-06-29T13:12:19Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.22, feels_like=35.55, temp_min=32.22, temp_max=32.22, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=5.54, deg=254, gust=6.09}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688024006, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:12:19Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:12:19Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:12:19Z - Completed 200 OK
2023-06-29T13:24:10Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:24:10Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:24:10Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:24:10Z - Weather fetched for Vidisha
2023-06-29T13:24:10Z - Status : 200
2023-06-29T13:24:10Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:24:10Z - Weather fetched for Vidisha
2023-06-29T13:24:10Z - Status : 200
2023-06-29T13:24:10Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.22, feels_like=35.55, temp_min=32.22, temp_max=32.22, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=5.54, deg=254, gust=6.09}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688025014, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:24:10Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:24:10Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:24:10Z - Completed 200 OK
2023-06-29T13:27:08Z - GET "/weather/Atlanta", parameters={}
2023-06-29T13:27:08Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:27:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:27:08Z - Weather fetched for Atlanta
2023-06-29T13:27:08Z - Status : 200
2023-06-29T13:27:08Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:27:08Z - Weather fetched for Atlanta
2023-06-29T13:27:08Z - Status : 200
2023-06-29T13:27:08Z - getWeatherInfo(Atlanta) : WeatherInfo [coord=Coord [lon=-84.388, lat=33.749], weather=[Weather [id=800, main=Clear, description=clear sky, icon=01n]], base=stations, main=Main [temp=20.09, feels_like=20.45, temp_min=18.08, temp_max=21.61, pressure=1015, humidity=88, sea_level=1015.0, grnd_level=980.0], visibility=10000, wind=Wind {speed=1.52, deg=7, gust=1.88}, clouds=Clouds [all=3], rain=null, snow=null, dt=1688025199, sys=Sys [type=2, id=2003068, country=US, sunrise=1688034578, sunset=1688086325, pod=null], timezone=-14400, id=4180439, name=Atlanta, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:27:08Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:27:08Z - Writing [WeatherInfo [coord=Coord [lon=-84.388, lat=33.749], weather=[Weather [id=800, main=Clear, descriptio (truncated)...]
2023-06-29T13:27:08Z - Completed 200 OK
2023-06-29T13:28:07Z - GET "/weather/Vidisha", parameters={}
2023-06-29T13:28:07Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T13:28:07Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:28:07Z - Weather fetched for Vidisha
2023-06-29T13:28:07Z - Status : 200
2023-06-29T13:28:07Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T13:28:07Z - Weather fetched for Vidisha
2023-06-29T13:28:07Z - Status : 200
2023-06-29T13:28:07Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.22, feels_like=35.55, temp_min=32.22, temp_max=32.22, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=5.54, deg=254, gust=6.09}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688025014, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T13:28:07Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T13:28:07Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T13:28:07Z - Completed 200 OK
2023-06-29T13:29:47Z - GET "/weather/", parameters={}
2023-06-29T13:29:47Z - Mapped to com.weather.microservice.Controller.WeatherController#welcome()
2023-06-29T13:29:47Z - <b>Welcome to the Weather App backed by Springboot</b>
2023-06-29T13:29:47Z - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-06-29T13:29:47Z - Writing ["<b>Welcome to the Weather App backed by Springboot</b>"]
2023-06-29T13:29:47Z - Completed 200 OK
2023-06-29T14:10:02Z - GET "/weather/Vidisha", parameters={}
2023-06-29T14:10:02Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T14:10:02Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T14:10:02Z - Weather fetched for Vidisha
2023-06-29T14:10:02Z - Status : 200
2023-06-29T14:10:02Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T14:10:02Z - Weather fetched for Vidisha
2023-06-29T14:10:02Z - Status : 200
2023-06-29T14:10:02Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.14, feels_like=35.39, temp_min=32.14, temp_max=32.14, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=6.45, deg=241, gust=6.55}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688028003, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T14:10:02Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T14:10:02Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T14:10:02Z - Completed 200 OK
2023-06-29T14:12:48Z - GET "/weather/Vidisha", parameters={}
2023-06-29T14:12:48Z - Mapped to com.weather.microservice.Controller.WeatherController#getWeather(String)
2023-06-29T14:12:48Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T14:12:48Z - Weather fetched for Vidisha
2023-06-29T14:12:48Z - Status : 200
2023-06-29T14:12:48Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-06-29T14:12:48Z - Weather fetched for Vidisha
2023-06-29T14:12:48Z - Status : 200
2023-06-29T14:12:48Z - getWeatherInfo(Vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=32.14, feels_like=35.39, temp_min=32.14, temp_max=32.14, pressure=1000, humidity=53, sea_level=1000.0, grnd_level=954.0], visibility=10000, wind=Wind {speed=6.45, deg=241, gust=6.55}, clouds=Clouds [all=100], rain=null, snow=null, dt=1688028003, sys=Sys [type=null, id=null, country=IN, sunrise=1687997087, sunset=1688045947, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-06-29T14:12:48Z - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-06-29T14:12:48Z - Writing [WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, descript (truncated)...]
2023-06-29T14:12:48Z - Completed 200 OK
2023-06-29T14:20:56Z - Application shutdown requested.
2023-06-29T14:20:56Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-06-29T14:20:56Z - Stopping service [Tomcat]
2023-06-29T14:20:56Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-06-29T14:20:56Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-06-29T14:20:56Z - Destroying ProtocolHandler ["http-nio-8090"]
