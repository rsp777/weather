2023-07-17T09:26:10Z - Starting WeatherApplication using Java 20.0.1 with PID 37676 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:26:10Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:26:10Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T09:26:10Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T09:26:11Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:26:11Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:11Z - Starting service [Tomcat]
2023-07-17T09:26:11Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:26:11Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:26:11Z - Root WebApplicationContext: initialization completed in 1120 ms
2023-07-17T09:26:12Z - LiveReload server is running on port 35729
2023-07-17T09:26:12Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:26:12Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:12Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:26:12Z - Started WeatherApplication in 2.191 seconds (process running for 2.888)
2023-07-17T09:26:13Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:26:13Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:26:13Z - Completed initialization in 1 ms
2023-07-17T09:26:33Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:26:33Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:33Z - Stopping service [Tomcat]
2023-07-17T09:26:33Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:26:33Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:33Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:33Z - Starting WeatherApplication using Java 20.0.1 with PID 37676 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:26:33Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:26:33Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:26:33Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:33Z - Starting service [Tomcat]
2023-07-17T09:26:33Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:26:33Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:26:33Z - Root WebApplicationContext: initialization completed in 283 ms
2023-07-17T09:26:33Z - LiveReload server is running on port 35729
2023-07-17T09:26:33Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:26:33Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:33Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:26:33Z - Started WeatherApplication in 0.463 seconds (process running for 23.895)
2023-07-17T09:26:33Z - Condition evaluation unchanged
2023-07-17T09:26:53Z - Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2023-07-17T09:26:53Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:53Z - Stopping service [Tomcat]
2023-07-17T09:26:53Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:53Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:53Z - Starting WeatherApplication using Java 20.0.1 with PID 37676 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:26:53Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:26:53Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:26:53Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:53Z - Starting service [Tomcat]
2023-07-17T09:26:53Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:26:53Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:26:53Z - Root WebApplicationContext: initialization completed in 231 ms
2023-07-17T09:26:53Z - LiveReload server is running on port 35729
2023-07-17T09:26:53Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:26:53Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:53Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:26:53Z - Started WeatherApplication in 0.4 seconds (process running for 43.886)
2023-07-17T09:26:53Z - Condition evaluation unchanged
2023-07-17T09:26:57Z - Application shutdown requested.
2023-07-17T09:26:57Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:57Z - Stopping service [Tomcat]
2023-07-17T09:26:57Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:26:57Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:27:03Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:27:03Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:27:03Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T09:27:03Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T09:27:04Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:27:04Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:27:04Z - Starting service [Tomcat]
2023-07-17T09:27:04Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:27:04Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:27:04Z - Root WebApplicationContext: initialization completed in 1093 ms
2023-07-17T09:27:05Z - LiveReload server is running on port 35729
2023-07-17T09:27:05Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:27:05Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:27:05Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:27:05Z - Started WeatherApplication in 2.189 seconds (process running for 2.894)
2023-07-17T09:27:06Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:27:06Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:27:06Z - Completed initialization in 1 ms
2023-07-17T09:27:27Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:27:28Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:27:28Z - Stopping service [Tomcat]
2023-07-17T09:27:28Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:27:28Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:27:28Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:27:28Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:27:28Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:27:28Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:27:28Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:27:28Z - Starting service [Tomcat]
2023-07-17T09:27:28Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:27:28Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:27:28Z - Root WebApplicationContext: initialization completed in 343 ms
2023-07-17T09:27:28Z - LiveReload server is running on port 35729
2023-07-17T09:27:28Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:27:28Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:27:28Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:27:28Z - Started WeatherApplication in 0.53 seconds (process running for 26.438)
2023-07-17T09:27:28Z - Condition evaluation unchanged
2023-07-17T09:27:42Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:27:42Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:27:42Z - Completed initialization in 1 ms
2023-07-17T09:27:42Z - City with space :             new york
2023-07-17T09:27:42Z - City with no space : new+york
2023-07-17T09:27:42Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-07-17T09:27:42Z - Weather fetched for New York
2023-07-17T09:27:42Z - Status : 200
2023-07-17T09:27:42Z - getWeatherInfo(            new york) : WeatherInfo [coord=Coord [lon=-74.006, lat=40.7143], weather=[Weather [id=801, main=Clouds, description=few clouds, icon=02n]], base=stations, main=Main [temp=23.89, feels_like=24.71, temp_min=22.69, temp_max=24.69, pressure=1011, humidity=91, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=0.89, deg=360, gust=3.58}, clouds=Clouds [all=20], rain=null, snow=null, dt=1689566050, sys=Sys [type=2, id=2008101, country=US, sunrise=1689500285, sunset=1689553538, pod=null], timezone=-14400, id=5128581, name=New York, cod=200, message=null, pop=null, dt_txt=null]
2023-07-17T09:28:07Z - City with space :             new york
2023-07-17T09:28:07Z - City with no space : new+york
2023-07-17T09:28:07Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-07-17T09:28:07Z - Weather fetched for New York
2023-07-17T09:28:07Z - Status : 200
2023-07-17T09:28:07Z - getWeatherInfo(            new york) : WeatherInfo [coord=Coord [lon=-74.006, lat=40.7143], weather=[Weather [id=801, main=Clouds, description=few clouds, icon=02n]], base=stations, main=Main [temp=23.89, feels_like=24.71, temp_min=22.69, temp_max=24.69, pressure=1011, humidity=91, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=0.89, deg=360, gust=3.58}, clouds=Clouds [all=20], rain=null, snow=null, dt=1689566050, sys=Sys [type=2, id=2008101, country=US, sunrise=1689500285, sunset=1689553538, pod=null], timezone=-14400, id=5128581, name=New York, cod=200, message=null, pop=null, dt_txt=null]
2023-07-17T09:28:46Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:28:46Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:28:46Z - Stopping service [Tomcat]
2023-07-17T09:28:46Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:28:46Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:28:46Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:28:46Z - Application run failed
java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.pattern.parser.Compiler@446c07ed - There is no conversion class registered for conversion word [weatherapp]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@446c07ed - [weatherapp] is not a valid conversion word
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:356)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.core.pattern.parser.Compiler@446c07ed - There is no conversion class registered for conversion word [weatherapp]
ERROR in ch.qos.logback.core.pattern.parser.Compiler@446c07ed - [weatherapp] is not a valid conversion word
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:260)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:247)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:80)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:60)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:187)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)
	... 22 common frames omitted
2023-07-17T09:28:53Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:28:53Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:28:53Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:28:53Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:28:53Z - Starting service [Tomcat]
2023-07-17T09:28:53Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:28:53Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:28:53Z - Root WebApplicationContext: initialization completed in 242 ms
2023-07-17T09:28:53Z - LiveReload server is running on port 35729
2023-07-17T09:28:53Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:28:53Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:28:53Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:28:53Z - Started WeatherApplication in 0.403 seconds (process running for 111.525)
2023-07-17T09:28:53Z - Condition evaluation unchanged
2023-07-17T09:28:59Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:28:59Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:28:59Z - Completed initialization in 1 ms
2023-07-17T09:28:59Z - City with space :             new york
2023-07-17T09:28:59Z - City with no space : new+york
2023-07-17T09:29:00Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-07-17T09:29:00Z - Weather fetched for New York
2023-07-17T09:29:00Z - Status : 200
2023-07-17T09:29:00Z - getWeatherInfo(            new york) : WeatherInfo [coord=Coord [lon=-74.006, lat=40.7143], weather=[Weather [id=801, main=Clouds, description=few clouds, icon=02n]], base=stations, main=Main [temp=23.89, feels_like=24.71, temp_min=22.69, temp_max=24.69, pressure=1011, humidity=91, sea_level=null, grnd_level=null], visibility=10000, wind=Wind {speed=0.89, deg=360, gust=3.58}, clouds=Clouds [all=20], rain=null, snow=null, dt=1689566050, sys=Sys [type=2, id=2008101, country=US, sunrise=1689500285, sunset=1689553538, pod=null], timezone=-14400, id=5128581, name=New York, cod=200, message=null, pop=null, dt_txt=null]
2023-07-17T09:29:16Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:29:16Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:16Z - Stopping service [Tomcat]
2023-07-17T09:29:16Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:29:16Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:16Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:16Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:29:16Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:29:16Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:29:16Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:16Z - Starting service [Tomcat]
2023-07-17T09:29:16Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:29:16Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:29:16Z - Root WebApplicationContext: initialization completed in 215 ms
2023-07-17T09:29:16Z - LiveReload server is running on port 35729
2023-07-17T09:29:16Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:29:16Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:16Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:29:16Z - Started WeatherApplication in 0.379 seconds (process running for 134.538)
2023-07-17T09:29:16Z - Condition evaluation unchanged
2023-07-17T09:29:18Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:29:18Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:18Z - Stopping service [Tomcat]
2023-07-17T09:29:18Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:18Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:18Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:29:18Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:29:18Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:29:18Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:18Z - Starting service [Tomcat]
2023-07-17T09:29:18Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:29:18Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:29:18Z - Root WebApplicationContext: initialization completed in 224 ms
2023-07-17T09:29:18Z - LiveReload server is running on port 35729
2023-07-17T09:29:18Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:29:18Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:29:18Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:29:18Z - Started WeatherApplication in 0.382 seconds (process running for 136.368)
2023-07-17T09:29:18Z - Condition evaluation unchanged
2023-07-17T09:34:01Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:34:01Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:34:01Z - Stopping service [Tomcat]
2023-07-17T09:34:01Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:34:01Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:34:01Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:34:01Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:34:01Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:34:01Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:34:01Z - Starting service [Tomcat]
2023-07-17T09:34:01Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:34:01Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:34:01Z - Root WebApplicationContext: initialization completed in 259 ms
2023-07-17T09:34:01Z - LiveReload server is running on port 35729
2023-07-17T09:34:01Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:34:01Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:34:01Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:34:01Z - Started WeatherApplication in 0.495 seconds (process running for 419.664)
2023-07-17T09:34:01Z - Condition evaluation unchanged
2023-07-17T09:35:26Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:35:26Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:35:26Z - Stopping service [Tomcat]
2023-07-17T09:35:26Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:35:26Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:35:26Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:35:26Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:35:26Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:35:26Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:35:26Z - Starting service [Tomcat]
2023-07-17T09:35:26Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:35:26Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:35:26Z - Root WebApplicationContext: initialization completed in 233 ms
2023-07-17T09:35:26Z - LiveReload server is running on port 35729
2023-07-17T09:35:26Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:35:26Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:35:26Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:35:26Z - Started WeatherApplication in 0.395 seconds (process running for 504.231)
2023-07-17T09:35:26Z - Condition evaluation unchanged
2023-07-17T09:36:41Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:36:41Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:36:41Z - Stopping service [Tomcat]
2023-07-17T09:36:41Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:36:41Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:36:41Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:36:41Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:36:41Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:36:41Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:36:41Z - Starting service [Tomcat]
2023-07-17T09:36:41Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:36:41Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:36:41Z - Root WebApplicationContext: initialization completed in 212 ms
2023-07-17T09:36:41Z - LiveReload server is running on port 35729
2023-07-17T09:36:41Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:36:41Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:36:41Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:36:41Z - Started WeatherApplication in 0.369 seconds (process running for 579.668)
2023-07-17T09:36:41Z - Condition evaluation unchanged
2023-07-17T09:37:25Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:37:25Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:37:25Z - Stopping service [Tomcat]
2023-07-17T09:37:25Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:37:25Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:37:25Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:37:25Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:37:25Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:37:25Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:37:25Z - Starting service [Tomcat]
2023-07-17T09:37:25Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:37:25Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:37:25Z - Root WebApplicationContext: initialization completed in 204 ms
2023-07-17T09:37:26Z - LiveReload server is running on port 35729
2023-07-17T09:37:26Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:37:26Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:37:26Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:37:26Z - Started WeatherApplication in 0.351 seconds (process running for 623.825)
2023-07-17T09:37:26Z - Condition evaluation unchanged
2023-07-17T09:38:43Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:38:43Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:38:43Z - Stopping service [Tomcat]
2023-07-17T09:38:43Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:38:43Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:38:43Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:38:43Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:38:43Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:38:43Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:38:43Z - Starting service [Tomcat]
2023-07-17T09:38:43Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:38:43Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:38:43Z - Root WebApplicationContext: initialization completed in 237 ms
2023-07-17T09:38:43Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'forecastController' defined in file [C:\Ravindra\weather\weather\WeatherApp\target\classes\com\weather\microservice\Controller\ForecastController.class]: Failed to instantiate [com.weather.microservice.Controller.ForecastController]: Constructor threw exception
2023-07-17T09:38:43Z - Stopping service [Tomcat]
2023-07-17T09:38:43Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T09:38:43Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'forecastController' defined in file [C:\Ravindra\weather\weather\WeatherApp\target\classes\com\weather\microservice\Controller\ForecastController.class]: Failed to instantiate [com.weather.microservice.Controller.ForecastController]: Constructor threw exception
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1314)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1199)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.weather.microservice.Controller.ForecastController]: Constructor threw exception
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1308)
	... 20 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problems: 
	The blank final field API_KEY may not have been initialized
	The blank final field WEATHER_API_URL may not have been initialized

	at com.weather.microservice.service.WeatherService.<init>(WeatherService.java:43)
	at com.weather.microservice.Controller.ForecastController.<init>(ForecastController.java:30)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:198)
	... 22 common frames omitted
2023-07-17T09:39:14Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:39:14Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:39:14Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:39:14Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:39:14Z - Starting service [Tomcat]
2023-07-17T09:39:14Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:39:14Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:39:14Z - Root WebApplicationContext: initialization completed in 203 ms
2023-07-17T09:39:14Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'weatherService': Unsatisfied dependency expressed through field 'API_KEY': No qualifying bean of type 'java.lang.String' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2023-07-17T09:39:14Z - Stopping service [Tomcat]
2023-07-17T09:39:14Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T09:39:14Z - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field API_KEY in com.weather.microservice.service.WeatherService required a bean of type 'java.lang.String' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'java.lang.String' in your configuration.

2023-07-17T09:40:31Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:40:31Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:40:31Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:40:31Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:40:31Z - Starting service [Tomcat]
2023-07-17T09:40:31Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:40:31Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:40:31Z - Root WebApplicationContext: initialization completed in 212 ms
2023-07-17T09:40:31Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'weatherService': Unsatisfied dependency expressed through field 'apiKey': No qualifying bean of type 'com.weather.microservice.config.Config' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2023-07-17T09:40:31Z - Stopping service [Tomcat]
2023-07-17T09:40:31Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T09:40:31Z - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field apiKey in com.weather.microservice.service.WeatherService required a bean of type 'com.weather.microservice.config.Config' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.weather.microservice.config.Config' in your configuration.

2023-07-17T09:42:13Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:42:13Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:42:14Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:42:14Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:42:14Z - Starting service [Tomcat]
2023-07-17T09:42:14Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:42:14Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:42:14Z - Root WebApplicationContext: initialization completed in 279 ms
2023-07-17T09:42:14Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'weatherService': Unsatisfied dependency expressed through field 'apiKey': No qualifying bean of type 'com.weather.microservice.config.Config' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2023-07-17T09:42:14Z - Stopping service [Tomcat]
2023-07-17T09:42:14Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T09:42:14Z - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field apiKey in com.weather.microservice.service.WeatherService required a bean of type 'com.weather.microservice.config.Config' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.weather.microservice.config.Config' in your configuration.

2023-07-17T09:42:50Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:42:50Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:42:51Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:42:51Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:42:51Z - Starting service [Tomcat]
2023-07-17T09:42:51Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:42:51Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:42:51Z - Root WebApplicationContext: initialization completed in 211 ms
2023-07-17T09:42:51Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'weatherService': Unsatisfied dependency expressed through field 'apiKey': No qualifying bean of type 'com.weather.microservice.config.Config' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2023-07-17T09:42:51Z - Stopping service [Tomcat]
2023-07-17T09:42:51Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T09:42:51Z - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field apiKey in com.weather.microservice.service.WeatherService required a bean of type 'com.weather.microservice.config.Config' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.weather.microservice.config.Config' in your configuration.

2023-07-17T09:43:37Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:43:37Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:43:37Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:43:37Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:43:37Z - Starting service [Tomcat]
2023-07-17T09:43:37Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:43:37Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:43:37Z - Root WebApplicationContext: initialization completed in 241 ms
2023-07-17T09:43:37Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiKey
2023-07-17T09:43:37Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiUrl
2023-07-17T09:43:37Z - LiveReload server is running on port 35729
2023-07-17T09:43:37Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:43:37Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:43:37Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:43:37Z - Started WeatherApplication in 0.46 seconds (process running for 995.247)
2023-07-17T09:43:37Z - Condition evaluation unchanged
2023-07-17T09:43:45Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:43:45Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:43:45Z - Completed initialization in 2 ms
2023-07-17T09:43:45Z - City with space :             new york
2023-07-17T09:43:45Z - City with no space : new+york
2023-07-17T09:43:45Z - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.apiKey" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.apiKey" is null
	at com.weather.microservice.service.WeatherService.getWeatherInfo(WeatherService.java:53)
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:47)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T09:45:18Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:45:18Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:18Z - Stopping service [Tomcat]
2023-07-17T09:45:18Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:45:18Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:18Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:18Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:45:18Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:45:19Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:45:19Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:19Z - Starting service [Tomcat]
2023-07-17T09:45:19Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:45:19Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:45:19Z - Root WebApplicationContext: initialization completed in 236 ms
2023-07-17T09:45:19Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiKey
2023-07-17T09:45:19Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiUrl
2023-07-17T09:45:19Z - LiveReload server is running on port 35729
2023-07-17T09:45:19Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:45:19Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:19Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:45:19Z - Started WeatherApplication in 0.41 seconds (process running for 1096.953)
2023-07-17T09:45:19Z - Condition evaluation unchanged
2023-07-17T09:45:39Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:45:39Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:39Z - Stopping service [Tomcat]
2023-07-17T09:45:39Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:39Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:39Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:45:39Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:45:40Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:45:40Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:40Z - Starting service [Tomcat]
2023-07-17T09:45:40Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:45:40Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:45:40Z - Root WebApplicationContext: initialization completed in 224 ms
2023-07-17T09:45:40Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiKey
2023-07-17T09:45:40Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiUrl
2023-07-17T09:45:40Z - Autowired annotation is not supported on static fields: public static com.weather.microservice.config.Config com.weather.microservice.service.WeatherService.config
2023-07-17T09:45:40Z - LiveReload server is running on port 35729
2023-07-17T09:45:40Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:45:40Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:45:40Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:45:40Z - Started WeatherApplication in 0.384 seconds (process running for 1117.941)
2023-07-17T09:45:40Z - Condition evaluation unchanged
2023-07-17T09:45:55Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:45:55Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:45:55Z - Completed initialization in 1 ms
2023-07-17T09:45:55Z - City with space :             new york
2023-07-17T09:45:55Z - City with no space : new+york
2023-07-17T09:45:55Z - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "com.weather.microservice.service.WeatherService.config" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "com.weather.microservice.service.WeatherService.config" is null
	at com.weather.microservice.service.WeatherService.getWeatherInfo(WeatherService.java:53)
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:47)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T09:46:04Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:46:04Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:04Z - Stopping service [Tomcat]
2023-07-17T09:46:04Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:46:04Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:04Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:04Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:46:04Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:46:05Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:46:05Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:05Z - Starting service [Tomcat]
2023-07-17T09:46:05Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:46:05Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:46:05Z - Root WebApplicationContext: initialization completed in 203 ms
2023-07-17T09:46:05Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiKey
2023-07-17T09:46:05Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiUrl
2023-07-17T09:46:05Z - LiveReload server is running on port 35729
2023-07-17T09:46:05Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:46:05Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:05Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:46:05Z - Started WeatherApplication in 0.365 seconds (process running for 1142.947)
2023-07-17T09:46:05Z - Condition evaluation unchanged
2023-07-17T09:46:43Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:46:43Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:43Z - Stopping service [Tomcat]
2023-07-17T09:46:43Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:43Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:43Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:46:43Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:46:44Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:46:44Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:44Z - Starting service [Tomcat]
2023-07-17T09:46:44Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:46:44Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:46:44Z - Root WebApplicationContext: initialization completed in 216 ms
2023-07-17T09:46:44Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiKey
2023-07-17T09:46:44Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiUrl
2023-07-17T09:46:44Z - LiveReload server is running on port 35729
2023-07-17T09:46:44Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:46:44Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:44Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:46:44Z - Started WeatherApplication in 0.376 seconds (process running for 1182.069)
2023-07-17T09:46:44Z - Condition evaluation unchanged
2023-07-17T09:46:56Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:46:56Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:56Z - Stopping service [Tomcat]
2023-07-17T09:46:56Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:56Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:56Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:46:56Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:46:57Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:46:57Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:57Z - Starting service [Tomcat]
2023-07-17T09:46:57Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:46:57Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:46:57Z - Root WebApplicationContext: initialization completed in 212 ms
2023-07-17T09:46:57Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiKey
2023-07-17T09:46:57Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.apiUrl
2023-07-17T09:46:57Z - LiveReload server is running on port 35729
2023-07-17T09:46:57Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:46:57Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:46:57Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:46:57Z - Started WeatherApplication in 0.369 seconds (process running for 1194.976)
2023-07-17T09:46:57Z - Condition evaluation unchanged
2023-07-17T09:47:10Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:47:10Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:47:10Z - Stopping service [Tomcat]
2023-07-17T09:47:10Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:47:10Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:47:10Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:47:10Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:47:10Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:47:10Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:47:10Z - Starting service [Tomcat]
2023-07-17T09:47:10Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:47:10Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:47:10Z - Root WebApplicationContext: initialization completed in 211 ms
2023-07-17T09:47:11Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.key
2023-07-17T09:47:11Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.url
2023-07-17T09:47:11Z - LiveReload server is running on port 35729
2023-07-17T09:47:11Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:47:11Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:47:11Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:47:11Z - Started WeatherApplication in 0.363 seconds (process running for 1208.891)
2023-07-17T09:47:11Z - Condition evaluation unchanged
2023-07-17T09:47:14Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:47:14Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:47:14Z - Completed initialization in 1 ms
2023-07-17T09:47:14Z - City with space :             new york
2023-07-17T09:47:14Z - City with no space : new+york
2023-07-17T09:47:14Z - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.config" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.config" is null
	at com.weather.microservice.service.WeatherService.getWeatherInfo(WeatherService.java:53)
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:47)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T09:48:14Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:48:14Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:14Z - Stopping service [Tomcat]
2023-07-17T09:48:14Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:48:14Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:14Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:14Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:48:14Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:48:14Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:48:14Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:14Z - Starting service [Tomcat]
2023-07-17T09:48:14Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:48:14Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:48:14Z - Root WebApplicationContext: initialization completed in 205 ms
2023-07-17T09:48:14Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.key
2023-07-17T09:48:14Z - Autowired annotation is not supported on static fields: private static java.lang.String com.weather.microservice.config.Config.url
2023-07-17T09:48:14Z - LiveReload server is running on port 35729
2023-07-17T09:48:14Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:48:14Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:14Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:48:14Z - Started WeatherApplication in 0.361 seconds (process running for 1272.195)
2023-07-17T09:48:14Z - Condition evaluation unchanged
2023-07-17T09:48:19Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:48:19Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:48:19Z - Completed initialization in 1 ms
2023-07-17T09:48:19Z - City with space :             new york
2023-07-17T09:48:19Z - City with no space : new+york
2023-07-17T09:48:19Z - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.config" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.config" is null
	at com.weather.microservice.service.WeatherService.getWeatherInfo(WeatherService.java:53)
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:47)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T09:48:34Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:48:35Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:35Z - Stopping service [Tomcat]
2023-07-17T09:48:35Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:48:35Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:35Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:35Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:48:35Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:48:35Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:48:35Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:35Z - Starting service [Tomcat]
2023-07-17T09:48:35Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:48:35Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:48:35Z - Root WebApplicationContext: initialization completed in 219 ms
2023-07-17T09:48:35Z - LiveReload server is running on port 35729
2023-07-17T09:48:35Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:48:35Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:48:35Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:48:35Z - Started WeatherApplication in 0.37 seconds (process running for 1293.184)
2023-07-17T09:48:35Z - Condition evaluation unchanged
2023-07-17T09:48:37Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:48:37Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:48:37Z - Completed initialization in 1 ms
2023-07-17T09:48:37Z - City with space :             new york
2023-07-17T09:48:37Z - City with no space : new+york
2023-07-17T09:48:37Z - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.config" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.config" is null
	at com.weather.microservice.service.WeatherService.getWeatherInfo(WeatherService.java:53)
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:47)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T09:50:37Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:50:37Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:50:37Z - Stopping service [Tomcat]
2023-07-17T09:50:37Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:50:37Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:50:37Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:50:37Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:50:37Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:50:38Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:50:38Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:50:38Z - Starting service [Tomcat]
2023-07-17T09:50:38Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:50:38Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:50:38Z - Root WebApplicationContext: initialization completed in 252 ms
2023-07-17T09:50:38Z - LiveReload server is running on port 35729
2023-07-17T09:50:38Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:50:38Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:50:38Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:50:38Z - Started WeatherApplication in 0.495 seconds (process running for 1416.127)
2023-07-17T09:50:38Z - Condition evaluation unchanged
2023-07-17T09:50:44Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:50:44Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:50:44Z - Completed initialization in 1 ms
2023-07-17T09:51:10Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:51:10Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:10Z - Stopping service [Tomcat]
2023-07-17T09:51:10Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:51:10Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:10Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:10Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:51:10Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:51:10Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:51:10Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:10Z - Starting service [Tomcat]
2023-07-17T09:51:10Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:51:10Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:51:10Z - Root WebApplicationContext: initialization completed in 206 ms
2023-07-17T09:51:10Z - LiveReload server is running on port 35729
2023-07-17T09:51:10Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:51:10Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:10Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:51:10Z - Started WeatherApplication in 0.348 seconds (process running for 1448.195)
2023-07-17T09:51:10Z - Condition evaluation unchanged
2023-07-17T09:51:15Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:51:15Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:51:15Z - Completed initialization in 0 ms
2023-07-17T09:51:37Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:51:37Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:37Z - Stopping service [Tomcat]
2023-07-17T09:51:37Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:51:37Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:37Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:37Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:51:37Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:51:37Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:51:37Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:37Z - Starting service [Tomcat]
2023-07-17T09:51:37Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:51:37Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:51:37Z - Root WebApplicationContext: initialization completed in 233 ms
2023-07-17T09:51:37Z - LiveReload server is running on port 35729
2023-07-17T09:51:37Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:51:37Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:51:37Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:51:37Z - Started WeatherApplication in 0.4 seconds (process running for 1475.273)
2023-07-17T09:51:37Z - Condition evaluation unchanged
2023-07-17T09:51:39Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:51:39Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:51:39Z - Completed initialization in 1 ms
2023-07-17T09:52:20Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:52:20Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:52:20Z - Stopping service [Tomcat]
2023-07-17T09:52:20Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:52:20Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:52:20Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:52:20Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:52:20Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:52:20Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:52:20Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:52:20Z - Starting service [Tomcat]
2023-07-17T09:52:20Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:52:20Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:52:20Z - Root WebApplicationContext: initialization completed in 206 ms
2023-07-17T09:52:20Z - LiveReload server is running on port 35729
2023-07-17T09:52:20Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:52:20Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:52:20Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:52:20Z - Started WeatherApplication in 0.355 seconds (process running for 1518.443)
2023-07-17T09:52:20Z - Condition evaluation unchanged
2023-07-17T09:52:26Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:52:26Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:52:26Z - Completed initialization in 0 ms
2023-07-17T09:52:26Z - API_KEY fetched
2023-07-17T09:52:26Z - <b>Welcome to the Weather App backed by Springboot</b>f777fa895ebe5cb38334176de19e5693
2023-07-17T09:52:58Z - City with space : vidisha
2023-07-17T09:52:58Z - City with no space : vidisha
2023-07-17T09:52:58Z - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.config" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.weather.microservice.config.Config.getApiUrl()" because "this.config" is null
	at com.weather.microservice.service.WeatherService.getWeatherInfo(WeatherService.java:53)
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T09:54:14Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T09:54:14Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:54:14Z - Stopping service [Tomcat]
2023-07-17T09:54:14Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T09:54:14Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:54:14Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:54:14Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:54:14Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:54:14Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:54:14Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:54:14Z - Starting service [Tomcat]
2023-07-17T09:54:14Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:54:14Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:54:14Z - Root WebApplicationContext: initialization completed in 195 ms
2023-07-17T09:54:14Z - LiveReload server is running on port 35729
2023-07-17T09:54:14Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:54:14Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:54:14Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:54:14Z - Started WeatherApplication in 0.354 seconds (process running for 1632.216)
2023-07-17T09:54:14Z - Condition evaluation unchanged
2023-07-17T09:59:06Z - Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
2023-07-17T09:59:06Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:59:06Z - Stopping service [Tomcat]
2023-07-17T09:59:06Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T09:59:06Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T09:59:06Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T09:59:06Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T09:59:06Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T09:59:06Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T09:59:06Z - Starting service [Tomcat]
2023-07-17T09:59:06Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T09:59:06Z - Initializing Spring embedded WebApplicationContext
2023-07-17T09:59:06Z - Root WebApplicationContext: initialization completed in 254 ms
2023-07-17T09:59:06Z - LiveReload server is running on port 35729
2023-07-17T09:59:06Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T09:59:06Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T09:59:06Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T09:59:06Z - Started WeatherApplication in 0.465 seconds (process running for 1924.49)
2023-07-17T09:59:06Z - Condition evaluation unchanged
2023-07-17T09:59:11Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T09:59:11Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T09:59:11Z - Completed initialization in 0 ms
2023-07-17T09:59:11Z - API_URL fetched
2023-07-17T09:59:11Z - API_KEY fetched
2023-07-17T09:59:11Z - API_PARAMS fetched
2023-07-17T09:59:11Z - City with space : vidisha
2023-07-17T09:59:11Z - City with no space : vidisha
2023-07-17T09:59:11Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-07-17T09:59:11Z - Weather fetched for Vidisha
2023-07-17T09:59:11Z - Status : 200
2023-07-17T09:59:11Z - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=28.11, feels_like=31.31, temp_min=28.11, temp_max=28.11, pressure=1003, humidity=73, sea_level=1003.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.59, deg=303, gust=5.49}, clouds=Clouds [all=97], rain=null, snow=null, dt=1689568151, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-07-17T10:01:54Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:01:54Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:01:54Z - Stopping service [Tomcat]
2023-07-17T10:01:54Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:01:54Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:01:54Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:01:54Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:01:54Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:01:54Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:01:54Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:01:54Z - Starting service [Tomcat]
2023-07-17T10:01:54Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:01:54Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:01:54Z - Root WebApplicationContext: initialization completed in 266 ms
2023-07-17T10:01:54Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
2023-07-17T10:01:54Z - Stopping service [Tomcat]
2023-07-17T10:01:54Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:01:54Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Circular placeholder reference 'weather.key' in property definitions
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:147)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:168)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17T10:02:31Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:02:31Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:02:31Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:02:31Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:02:31Z - Starting service [Tomcat]
2023-07-17T10:02:31Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:02:31Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:02:31Z - Root WebApplicationContext: initialization completed in 206 ms
2023-07-17T10:02:31Z - LiveReload server is running on port 35729
2023-07-17T10:02:31Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:02:31Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:02:31Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:02:31Z - Started WeatherApplication in 0.404 seconds (process running for 2129.72)
2023-07-17T10:02:31Z - Condition evaluation unchanged
2023-07-17T10:04:53Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:04:53Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:04:53Z - Stopping service [Tomcat]
2023-07-17T10:04:53Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:04:53Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:04:53Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:04:53Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:04:53Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:04:53Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:04:53Z - Starting service [Tomcat]
2023-07-17T10:04:53Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:04:53Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:04:53Z - Root WebApplicationContext: initialization completed in 217 ms
2023-07-17T10:04:53Z - LiveReload server is running on port 35729
2023-07-17T10:04:53Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:04:53Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:04:53Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:04:53Z - Started WeatherApplication in 0.346 seconds (process running for 2271.708)
2023-07-17T10:04:53Z - Condition evaluation unchanged
2023-07-17T10:05:02Z - Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
2023-07-17T10:05:02Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:02Z - Stopping service [Tomcat]
2023-07-17T10:05:02Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:02Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:02Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:05:02Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:05:02Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:05:02Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:02Z - Starting service [Tomcat]
2023-07-17T10:05:02Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:05:02Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:05:02Z - Root WebApplicationContext: initialization completed in 208 ms
2023-07-17T10:05:02Z - LiveReload server is running on port 35729
2023-07-17T10:05:02Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:05:02Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:02Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:05:02Z - Started WeatherApplication in 0.356 seconds (process running for 2280.572)
2023-07-17T10:05:02Z - Condition evaluation unchanged
2023-07-17T10:05:23Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:05:23Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:23Z - Stopping service [Tomcat]
2023-07-17T10:05:23Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:23Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:23Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:05:23Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:05:23Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:05:23Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:23Z - Starting service [Tomcat]
2023-07-17T10:05:23Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:05:23Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:05:23Z - Root WebApplicationContext: initialization completed in 216 ms
2023-07-17T10:05:23Z - LiveReload server is running on port 35729
2023-07-17T10:05:23Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:05:23Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:05:23Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:05:23Z - Started WeatherApplication in 0.365 seconds (process running for 2301.542)
2023-07-17T10:05:23Z - Condition evaluation unchanged
2023-07-17T10:05:45Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:05:45Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:05:45Z - Completed initialization in 1 ms
2023-07-17T10:06:30Z - Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2023-07-17T10:06:30Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:06:30Z - Stopping service [Tomcat]
2023-07-17T10:06:30Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:06:30Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:06:30Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:06:30Z - Starting WeatherApplication using Java 20.0.1 with PID 12744 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:06:30Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:06:31Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:06:31Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:06:31Z - Starting service [Tomcat]
2023-07-17T10:06:31Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:06:31Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:06:31Z - Root WebApplicationContext: initialization completed in 233 ms
2023-07-17T10:06:31Z - LiveReload server is running on port 35729
2023-07-17T10:06:31Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:06:31Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:06:31Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:06:31Z - Started WeatherApplication in 0.45 seconds (process running for 2368.988)
2023-07-17T10:06:31Z - Condition evaluation unchanged
2023-07-17T10:09:21Z - Application shutdown requested.
2023-07-17T10:09:21Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:09:21Z - Stopping service [Tomcat]
2023-07-17T10:09:21Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:09:21Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:19:14Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:19:14Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:19:14Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:19:14Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:19:15Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:19:15Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:19:15Z - Starting service [Tomcat]
2023-07-17T10:19:15Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:19:15Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:19:15Z - Root WebApplicationContext: initialization completed in 1126 ms
2023-07-17T10:19:16Z - LiveReload server is running on port 35729
2023-07-17T10:19:16Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:19:16Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:19:16Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:19:16Z - Started WeatherApplication in 2.349 seconds (process running for 2.998)
2023-07-17T10:19:17Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:19:17Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:19:17Z - Completed initialization in 0 ms
2023-07-17T10:20:05Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:20:05Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:20:05Z - Stopping service [Tomcat]
2023-07-17T10:20:05Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:20:05Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:20:05Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:20:05Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:20:05Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:20:05Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:20:05Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:20:05Z - Starting service [Tomcat]
2023-07-17T10:20:05Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:20:05Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:20:05Z - Root WebApplicationContext: initialization completed in 247 ms
2023-07-17T10:20:05Z - LiveReload server is running on port 35729
2023-07-17T10:20:05Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:20:05Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:20:05Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:20:05Z - Started WeatherApplication in 0.431 seconds (process running for 52.232)
2023-07-17T10:20:05Z - Condition evaluation unchanged
2023-07-17T10:20:09Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:20:09Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:20:09Z - Completed initialization in 0 ms
2023-07-17T10:21:20Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:21:20Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:20Z - Stopping service [Tomcat]
2023-07-17T10:21:20Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:21:20Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:20Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:20Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:21:20Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:21:21Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:21:21Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:21Z - Starting service [Tomcat]
2023-07-17T10:21:21Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:21:21Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:21:21Z - Root WebApplicationContext: initialization completed in 246 ms
2023-07-17T10:21:21Z - LiveReload server is running on port 35729
2023-07-17T10:21:21Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:21:21Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:21Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:21:21Z - Started WeatherApplication in 0.411 seconds (process running for 127.712)
2023-07-17T10:21:21Z - Condition evaluation unchanged
2023-07-17T10:21:22Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:21:22Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:21:22Z - Completed initialization in 1 ms
2023-07-17T10:21:44Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:21:44Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:44Z - Stopping service [Tomcat]
2023-07-17T10:21:44Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:21:44Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:44Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:45Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:21:45Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:21:45Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:21:45Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:45Z - Starting service [Tomcat]
2023-07-17T10:21:45Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:21:45Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:21:45Z - Root WebApplicationContext: initialization completed in 237 ms
2023-07-17T10:21:45Z - LiveReload server is running on port 35729
2023-07-17T10:21:45Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:21:45Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:21:45Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:21:45Z - Started WeatherApplication in 0.397 seconds (process running for 151.744)
2023-07-17T10:21:45Z - Condition evaluation unchanged
2023-07-17T10:21:47Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:21:47Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:21:47Z - Completed initialization in 1 ms
2023-07-17T10:22:32Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:22:32Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:22:32Z - Stopping service [Tomcat]
2023-07-17T10:22:32Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:22:32Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:22:32Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:22:32Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:22:32Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:22:32Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:22:32Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:22:32Z - Starting service [Tomcat]
2023-07-17T10:22:32Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:22:32Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:22:32Z - Root WebApplicationContext: initialization completed in 246 ms
2023-07-17T10:22:32Z - LiveReload server is running on port 35729
2023-07-17T10:22:32Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:22:32Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:22:32Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:22:32Z - Started WeatherApplication in 0.413 seconds (process running for 198.981)
2023-07-17T10:22:32Z - Condition evaluation unchanged
2023-07-17T10:22:37Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:22:37Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:22:37Z - Completed initialization in 1 ms
2023-07-17T10:24:43Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:24:43Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:24:43Z - Stopping service [Tomcat]
2023-07-17T10:24:43Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:24:43Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:24:43Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:24:43Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:24:43Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:24:43Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:24:43Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:24:43Z - Starting service [Tomcat]
2023-07-17T10:24:43Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:24:43Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:24:43Z - Root WebApplicationContext: initialization completed in 356 ms
2023-07-17T10:24:43Z - LiveReload server is running on port 35729
2023-07-17T10:24:43Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:24:43Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:24:43Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:24:43Z - Started WeatherApplication in 0.585 seconds (process running for 330.108)
2023-07-17T10:24:43Z - Condition evaluation unchanged
2023-07-17T10:24:45Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:24:45Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:24:45Z - Completed initialization in 2 ms
2023-07-17T10:28:12Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:28:12Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:12Z - Stopping service [Tomcat]
2023-07-17T10:28:12Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:28:12Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:12Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:12Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:28:12Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:28:13Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:28:13Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:13Z - Starting service [Tomcat]
2023-07-17T10:28:13Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:28:13Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:28:13Z - Root WebApplicationContext: initialization completed in 292 ms
2023-07-17T10:28:13Z - LiveReload server is running on port 35729
2023-07-17T10:28:13Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:28:13Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:13Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:28:13Z - Started WeatherApplication in 0.447 seconds (process running for 539.661)
2023-07-17T10:28:13Z - Condition evaluation unchanged
2023-07-17T10:28:26Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:28:26Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:26Z - Stopping service [Tomcat]
2023-07-17T10:28:26Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:26Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:26Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:28:26Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:28:27Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:28:27Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:28:27Z - Starting service [Tomcat]
2023-07-17T10:28:27Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:28:27Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:28:27Z - Root WebApplicationContext: initialization completed in 226 ms
2023-07-17T10:28:27Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'errorController': Lookup method resolution failed
2023-07-17T10:28:27Z - Stopping service [Tomcat]
2023-07-17T10:28:27Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:28:27Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'errorController': Lookup method resolution failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.checkLookupMethods(AutowiredAnnotationBeanPostProcessor.java:472)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:342)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1291)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1186)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.weather.microservice.Controller.ErrorController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4c31a66a]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:483)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:320)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.checkLookupMethods(AutowiredAnnotationBeanPostProcessor.java:450)
	... 22 common frames omitted
Caused by: java.lang.NoClassDefFoundError: HttpServletRequest
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3502)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2601)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:465)
	... 24 common frames omitted
Caused by: java.lang.ClassNotFoundException: HttpServletRequest
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:496)
	at java.base/java.lang.Class.forName(Class.java:475)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:121)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 28 common frames omitted
2023-07-17T10:29:02Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:29:02Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:29:03Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:29:03Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:29:03Z - Starting service [Tomcat]
2023-07-17T10:29:03Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:29:03Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:29:03Z - Root WebApplicationContext: initialization completed in 224 ms
2023-07-17T10:29:03Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:29:03Z - Stopping service [Tomcat]
2023-07-17T10:29:03Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:29:03Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:29:25Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:29:25Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:29:26Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:29:26Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:29:26Z - Starting service [Tomcat]
2023-07-17T10:29:26Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:29:26Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:29:26Z - Root WebApplicationContext: initialization completed in 312 ms
2023-07-17T10:29:26Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:29:26Z - Stopping service [Tomcat]
2023-07-17T10:29:26Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:29:26Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:31:41Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:31:41Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:31:42Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:31:42Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:31:42Z - Starting service [Tomcat]
2023-07-17T10:31:42Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:31:42Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:31:42Z - Root WebApplicationContext: initialization completed in 314 ms
2023-07-17T10:31:42Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:31:42Z - Stopping service [Tomcat]
2023-07-17T10:31:42Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:31:42Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:32:31Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:32:31Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:32:31Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:32:31Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:32:31Z - Starting service [Tomcat]
2023-07-17T10:32:31Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:32:31Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:32:31Z - Root WebApplicationContext: initialization completed in 234 ms
2023-07-17T10:32:31Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:32:31Z - Stopping service [Tomcat]
2023-07-17T10:32:31Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:32:31Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:32:35Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:32:35Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:32:35Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:32:35Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:32:35Z - Starting service [Tomcat]
2023-07-17T10:32:35Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:32:35Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:32:35Z - Root WebApplicationContext: initialization completed in 204 ms
2023-07-17T10:32:36Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:32:36Z - Stopping service [Tomcat]
2023-07-17T10:32:36Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:32:36Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:33:17Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:33:17Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:33:18Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:33:18Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:33:18Z - Starting service [Tomcat]
2023-07-17T10:33:18Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:33:18Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:33:18Z - Root WebApplicationContext: initialization completed in 203 ms
2023-07-17T10:33:18Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:33:18Z - Stopping service [Tomcat]
2023-07-17T10:33:18Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:33:18Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:33:26Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:33:26Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:33:26Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:33:26Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:33:26Z - Starting service [Tomcat]
2023-07-17T10:33:26Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:33:26Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:33:26Z - Root WebApplicationContext: initialization completed in 214 ms
2023-07-17T10:33:26Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:33:26Z - Stopping service [Tomcat]
2023-07-17T10:33:26Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:33:26Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:35:24Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:35:24Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:35:24Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.weather.microservice.WeatherApplication]: Error processing condition on org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$DifferentManagementContextConfiguration
2023-07-17T10:35:24Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:35:24Z - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to process import candidates for configuration class [com.weather.microservice.WeatherApplication]: Error processing condition on org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$DifferentManagementContextConfiguration
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:524)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.lambda$processGroupImports$1(ConfigurationClassParser.java:726)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.processGroupImports(ConfigurationClassParser.java:723)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler.process(ConfigurationClassParser.java:694)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:182)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:415)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Error processing condition on org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$DifferentManagementContextConfiguration
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:60)
	at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:219)
	at org.springframework.context.annotation.ConfigurationClassParser.processMemberClasses(ConfigurationClassParser.java:365)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:265)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:243)
	at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:514)
	... 21 common frames omitted
Caused by: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Integer] for value [8090spring.mvc.servlet.path=/]
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:47)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:192)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:175)
	at org.springframework.core.env.AbstractPropertyResolver.convertValueIfNecessary(AbstractPropertyResolver.java:265)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:81)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:65)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:563)
	at org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType.getPortProperty(ManagementPortType.java:64)
	at org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType.get(ManagementPortType.java:58)
	at org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition.getMatchOutcome(OnManagementPortCondition.java:49)
	at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47)
	... 27 common frames omitted
Caused by: java.lang.NumberFormatException: For input string: "8090spring.mvc.servlet.path=/"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:665)
	at java.base/java.lang.Integer.valueOf(Integer.java:992)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:203)
	at org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber.convert(StringToNumberConverterFactory.java:64)
	at org.springframework.core.convert.support.StringToNumberConverterFactory$StringToNumber.convert(StringToNumberConverterFactory.java:50)
	at org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter.convert(GenericConversionService.java:437)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	... 37 common frames omitted
2023-07-17T10:35:28Z - Starting WeatherApplication using Java 20.0.1 with PID 28708 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:35:28Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:35:28Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:35:28Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:35:28Z - Starting service [Tomcat]
2023-07-17T10:35:28Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:35:28Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:35:28Z - Root WebApplicationContext: initialization completed in 236 ms
2023-07-17T10:35:28Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:35:28Z - Stopping service [Tomcat]
2023-07-17T10:35:28Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:35:28Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:35:42Z - Starting WeatherApplication using Java 20.0.1 with PID 30304 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:35:42Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:35:42Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:35:42Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:35:43Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:35:43Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:35:43Z - Starting service [Tomcat]
2023-07-17T10:35:43Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:35:43Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:35:43Z - Root WebApplicationContext: initialization completed in 1088 ms
2023-07-17T10:35:43Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:35:43Z - Stopping service [Tomcat]
2023-07-17T10:35:43Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:35:44Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:36:36Z - Starting WeatherApplication using Java 20.0.1 with PID 35896 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:36:36Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:36:36Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:36:36Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:36:37Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:36:37Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:36:37Z - Starting service [Tomcat]
2023-07-17T10:36:37Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:36:37Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:36:37Z - Root WebApplicationContext: initialization completed in 1096 ms
2023-07-17T10:36:38Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
2023-07-17T10:36:38Z - Stopping service [Tomcat]
2023-07-17T10:36:38Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:36:38Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'basicErrorController' method 
org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
to { [/error]}: There is already 'errorController' bean method
com.weather.microservice.Controller.ErrorController#handleError(HttpServletRequest) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:667)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:633)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:331)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:441)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:298)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:296)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:224)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:225)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 19 common frames omitted
2023-07-17T10:38:17Z - Starting WeatherApplication using Java 20.0.1 with PID 42548 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:38:17Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:38:17Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:38:17Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:38:18Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:38:18Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:38:18Z - Starting service [Tomcat]
2023-07-17T10:38:18Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:38:18Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:38:18Z - Root WebApplicationContext: initialization completed in 1177 ms
2023-07-17T10:38:19Z - LiveReload server is running on port 35729
2023-07-17T10:38:19Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:38:19Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:38:19Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:38:19Z - Started WeatherApplication in 2.314 seconds (process running for 3.005)
2023-07-17T10:38:20Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:38:20Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:38:20Z - Completed initialization in 1 ms
2023-07-17T10:38:22Z - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Circular view path [error]: would dispatch back to the current handler URL [/error] again. Check your ViewResolver setup! (Hint: This may be the result of an unspecified view, due to default view name generation.)] with root cause
jakarta.servlet.ServletException: Circular view path [error]: would dispatch back to the current handler URL [/error] again. Check your ViewResolver setup! (Hint: This may be the result of an unspecified view, due to default view name generation.)
	at org.springframework.web.servlet.view.InternalResourceView.prepareForRendering(InternalResourceView.java:210)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:148)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T10:38:22Z - Servlet.service() for servlet [dispatcherServlet] threw exception
jakarta.servlet.ServletException: Circular view path [error]: would dispatch back to the current handler URL [/error] again. Check your ViewResolver setup! (Hint: This may be the result of an unspecified view, due to default view name generation.)
	at org.springframework.web.servlet.view.InternalResourceView.prepareForRendering(InternalResourceView.java:210)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:148)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:642)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:340)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:277)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:358)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:304)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T10:38:22Z - Exception Processing ErrorPage[errorCode=0, location=/error]
jakarta.servlet.ServletException: Circular view path [error]: would dispatch back to the current handler URL [/error] again. Check your ViewResolver setup! (Hint: This may be the result of an unspecified view, due to default view name generation.)
	at org.springframework.web.servlet.view.InternalResourceView.prepareForRendering(InternalResourceView.java:210)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:148)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:642)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:340)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:277)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:358)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:304)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:149)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17T10:39:04Z - Restarting due to 1 class path change (0 additions, 1 deletion, 0 modifications)
2023-07-17T10:39:04Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:04Z - Stopping service [Tomcat]
2023-07-17T10:39:04Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:39:04Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:04Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:04Z - Starting WeatherApplication using Java 20.0.1 with PID 42548 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:39:04Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:39:04Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:39:04Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:04Z - Starting service [Tomcat]
2023-07-17T10:39:04Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:39:04Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:39:04Z - Root WebApplicationContext: initialization completed in 291 ms
2023-07-17T10:39:04Z - LiveReload server is running on port 35729
2023-07-17T10:39:04Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:39:04Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:04Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:39:04Z - Started WeatherApplication in 0.483 seconds (process running for 48.68)
2023-07-17T10:39:04Z - Condition evaluation unchanged
2023-07-17T10:39:55Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:39:55Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:55Z - Stopping service [Tomcat]
2023-07-17T10:39:55Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:55Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:55Z - Starting WeatherApplication using Java 20.0.1 with PID 42548 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:39:55Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:39:55Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:39:55Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:55Z - Starting service [Tomcat]
2023-07-17T10:39:55Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:39:55Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:39:55Z - Root WebApplicationContext: initialization completed in 233 ms
2023-07-17T10:39:56Z - LiveReload server is running on port 35729
2023-07-17T10:39:56Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:39:56Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:39:56Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:39:56Z - Started WeatherApplication in 0.404 seconds (process running for 99.944)
2023-07-17T10:39:56Z - Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

    None


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



2023-07-17T10:40:10Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:40:10Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:40:10Z - Completed initialization in 1 ms
2023-07-17T10:40:15Z - <b>Welcome to the Weather App backed by Springboot</b>
2023-07-17T10:40:22Z - API_URL fetched
2023-07-17T10:40:22Z - API_KEY fetched
2023-07-17T10:40:22Z - API_PARAMS fetched
2023-07-17T10:40:22Z - City with space : vidisha
2023-07-17T10:40:22Z - City with no space : vidisha
2023-07-17T10:40:23Z - response inside class com.weather.microservice.service.WeatherService: 200
2023-07-17T10:40:23Z - Weather fetched for Vidisha
2023-07-17T10:40:23Z - Status : 200
2023-07-17T10:40:23Z - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=29.16, feels_like=33.08, temp_min=29.16, temp_max=29.16, pressure=1003, humidity=70, sea_level=1003.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.74, deg=302, gust=5.19}, clouds=Clouds [all=88], rain=null, snow=null, dt=1689570623, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null]
2023-07-17T10:40:33Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:40:33Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:40:33Z - Stopping service [Tomcat]
2023-07-17T10:40:33Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:40:33Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:40:33Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:40:33Z - Starting WeatherApplication using Java 20.0.1 with PID 42548 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:40:33Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:40:34Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:40:34Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:40:34Z - Starting service [Tomcat]
2023-07-17T10:40:34Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:40:34Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:40:34Z - Root WebApplicationContext: initialization completed in 239 ms
2023-07-17T10:40:34Z - LiveReload server is running on port 35729
2023-07-17T10:40:34Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:40:34Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:40:34Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:40:34Z - Started WeatherApplication in 0.403 seconds (process running for 138.107)
2023-07-17T10:40:34Z - Condition evaluation unchanged
2023-07-17T10:41:10Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:41:11Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:11Z - Stopping service [Tomcat]
2023-07-17T10:41:11Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:11Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:11Z - Starting WeatherApplication using Java 20.0.1 with PID 42548 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:41:11Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:41:11Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:41:11Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:11Z - Starting service [Tomcat]
2023-07-17T10:41:11Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:41:11Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:41:11Z - Root WebApplicationContext: initialization completed in 221 ms
2023-07-17T10:41:11Z - LiveReload server is running on port 35729
2023-07-17T10:41:11Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:41:11Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:11Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:41:11Z - Started WeatherApplication in 0.376 seconds (process running for 175.231)
2023-07-17T10:41:11Z - Condition evaluation unchanged
2023-07-17T10:41:25Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:41:25Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:25Z - Stopping service [Tomcat]
2023-07-17T10:41:25Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:25Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:26Z - Starting WeatherApplication using Java 20.0.1 with PID 42548 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:41:26Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:41:26Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:41:26Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:26Z - Starting service [Tomcat]
2023-07-17T10:41:26Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:41:26Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:41:26Z - Root WebApplicationContext: initialization completed in 226 ms
2023-07-17T10:41:26Z - LiveReload server is running on port 35729
2023-07-17T10:41:26Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:41:26Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:26Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:41:26Z - Started WeatherApplication in 0.374 seconds (process running for 190.164)
2023-07-17T10:41:26Z - Condition evaluation unchanged
2023-07-17T10:41:55Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:41:55Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:55Z - Stopping service [Tomcat]
2023-07-17T10:41:55Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:55Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:56Z - Starting WeatherApplication using Java 20.0.1 with PID 42548 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:41:56Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:41:56Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:41:56Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:56Z - Starting service [Tomcat]
2023-07-17T10:41:56Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:41:56Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:41:56Z - Root WebApplicationContext: initialization completed in 233 ms
2023-07-17T10:41:56Z - LiveReload server is running on port 35729
2023-07-17T10:41:56Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:41:56Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:41:56Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:41:56Z - Started WeatherApplication in 0.411 seconds (process running for 220.253)
2023-07-17T10:41:56Z - Condition evaluation unchanged
2023-07-17T10:42:03Z - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2023-07-17T10:42:03Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:42:03Z - Stopping service [Tomcat]
2023-07-17T10:42:03Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:42:03Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:42:03Z - Starting WeatherApplication using Java 20.0.1 with PID 42548 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:42:03Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:42:04Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:42:04Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:42:04Z - Starting service [Tomcat]
2023-07-17T10:42:04Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:42:04Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:42:04Z - Root WebApplicationContext: initialization completed in 218 ms
2023-07-17T10:42:04Z - LiveReload server is running on port 35729
2023-07-17T10:42:04Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:42:04Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:42:04Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:42:04Z - Started WeatherApplication in 0.363 seconds (process running for 228.106)
2023-07-17T10:42:04Z - Condition evaluation unchanged
2023-07-17T10:45:58Z - Application shutdown requested.
2023-07-17T10:45:58Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:45:58Z - Stopping service [Tomcat]
2023-07-17T10:45:58Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:45:58Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:46:08Z - Starting WeatherApplication using Java 20.0.1 with PID 37096 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:46:08Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:46:08Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:46:08Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:46:10Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:46:10Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:46:10Z - Starting service [Tomcat]
2023-07-17T10:46:10Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:46:10Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:46:10Z - Root WebApplicationContext: initialization completed in 2167 ms
2023-07-17T10:46:11Z - LiveReload server is running on port 35729
2023-07-17T10:46:11Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:46:11Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:46:11Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:46:11Z - Started WeatherApplication in 4.763 seconds (process running for 6.183)
2023-07-17T10:46:18Z - Starting WeatherApplication using Java 20.0.1 with PID 22644 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:46:18Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:46:18Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:46:18Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:46:19Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:46:19Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:46:19Z - Starting service [Tomcat]
2023-07-17T10:46:19Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:46:19Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:46:19Z - Root WebApplicationContext: initialization completed in 1106 ms
2023-07-17T10:46:20Z - LiveReload server is running on port 35729
2023-07-17T10:46:20Z - Exposing 14 endpoint(s) beneath base path '/actuator'
2023-07-17T10:46:20Z - Starting ProtocolHandler ["http-nio-8090"]
2023-07-17T10:46:20Z - Tomcat started on port(s): 8090 (http) with context path ''
2023-07-17T10:46:20Z - Started WeatherApplication in 2.191 seconds (process running for 2.848)
2023-07-17T10:46:21Z - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-17T10:46:21Z - Initializing Servlet 'dispatcherServlet'
2023-07-17T10:46:21Z - Completed initialization in 0 ms
2023-07-17T10:46:24Z - Application shutdown requested.
2023-07-17T10:46:24Z - Pausing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:46:24Z - Stopping service [Tomcat]
2023-07-17T10:46:24Z - Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-07-17T10:46:24Z - Stopping ProtocolHandler ["http-nio-8090"]
2023-07-17T10:46:24Z - Destroying ProtocolHandler ["http-nio-8090"]
2023-07-17T10:49:23Z - Starting WeatherApplication using Java 20.0.1 with PID 38860 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:49:23Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:49:23Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:49:23Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:49:24Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:49:24Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:49:24Z - Starting service [Tomcat]
2023-07-17T10:49:24Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:49:24Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:49:24Z - Root WebApplicationContext: initialization completed in 1144 ms
2023-07-17T10:49:24Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
2023-07-17T10:49:24Z - Stopping service [Tomcat]
2023-07-17T10:49:24Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:49:24Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'APIKEY' in value "${APIKEY}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17T10:51:31Z - Starting WeatherApplication using Java 20.0.1 with PID 33672 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:51:31Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:51:31Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:51:31Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:51:32Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:51:32Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:51:32Z - Starting service [Tomcat]
2023-07-17T10:51:32Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:51:32Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:51:32Z - Root WebApplicationContext: initialization completed in 1154 ms
2023-07-17T10:51:32Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
2023-07-17T10:51:32Z - Stopping service [Tomcat]
2023-07-17T10:51:32Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:51:32Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'APIKEY' in value "${APIKEY}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17T10:51:59Z - Starting WeatherApplication using Java 20.0.1 with PID 7300 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp)
2023-07-17T10:51:59Z - No active profile set, falling back to 1 default profile: "default"
2023-07-17T10:51:59Z - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-17T10:51:59Z - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-17T10:52:00Z - Tomcat initialized with port(s): 8090 (http)
2023-07-17T10:52:00Z - Initializing ProtocolHandler ["http-nio-8090"]
2023-07-17T10:52:00Z - Starting service [Tomcat]
2023-07-17T10:52:00Z - Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-17T10:52:00Z - Initializing Spring embedded WebApplicationContext
2023-07-17T10:52:00Z - Root WebApplicationContext: initialization completed in 1235 ms
2023-07-17T10:52:01Z - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
2023-07-17T10:52:01Z - Stopping service [Tomcat]
2023-07-17T10:52:01Z - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-17T10:52:01Z - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'APIKEY' in value "${APIKEY}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 10:52:29 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 16536 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 10:52:29 [weatherapp] DEBUG WeatherApplication - Running with Spring Boot v3.1.1, Spring v6.0.10 (StartupInfoLogger.java:52)
2023-07-17 10:52:29 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 10:52:29 [weatherapp] DEBUG SpringApplication - Loading source class com.weather.microservice.WeatherApplication (SpringApplication.java:667)
2023-07-17 10:52:29 [weatherapp] DEBUG ChangeableUrls - Matching URLs for reloading : [file:/C:/Ravindra/weather/weather/WeatherApp/target/classes/] (DeferredLog.java:249)
2023-07-17 10:52:29 [weatherapp] DEBUG DevToolsSettings - Included patterns for restart : [] (DeferredLog.java:249)
2023-07-17 10:52:29 [weatherapp] DEBUG DevToolsSettings - Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/] (DeferredLog.java:249)
2023-07-17 10:52:29 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 10:52:29 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 10:52:29 [weatherapp] DEBUG AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@390a2aac (AbstractApplicationContext.java:654)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\Ravindra\weather\weather\WeatherApp\target\classes\com\weather\microservice\config\Config.class] (ClassPathScanningCandidateComponentProvider.java:441)
2023-07-17 10:52:29 [weatherapp] DEBUG ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\Ravindra\weather\weather\WeatherApp\target\classes\com\weather\microservice\Controller\ForecastController.class] (ClassPathScanningCandidateComponentProvider.java:441)
2023-07-17 10:52:29 [weatherapp] DEBUG ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\Ravindra\weather\weather\WeatherApp\target\classes\com\weather\microservice\Controller\WeatherController.class] (ClassPathScanningCandidateComponentProvider.java:441)
2023-07-17 10:52:29 [weatherapp] DEBUG ClassPathBeanDefinitionScanner - Identified candidate component class: file [C:\Ravindra\weather\weather\WeatherApp\target\classes\com\weather\microservice\service\WeatherService.class] (ClassPathScanningCandidateComponentProvider.java:441)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'forceAutoProxyCreatorToUseClassProxying' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'healthEndpointGroupsBeanPostProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'meterRegistryPostProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'meterRegistryPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@390a2aac' (ConstructorResolver.java:808)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRegistryPostProcessor' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG UiApplicationContextUtils - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@9e037cd] (UiApplicationContextUtils.java:86)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactory' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'websocketServletWebServerCustomizer' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:29 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslBundleRegistry' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'sslBundleRegistry' via factory method to bean named 'sslPropertiesSslBundleRegistrar' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorPageCustomizer' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServletRegistration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'dispatcherServlet' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartConfigElement' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG TomcatServletWebServerFactory - Code archive: C:\Users\Ravi\.m2\repository\org\springframework\boot\spring-boot\3.1.1\spring-boot-3.1.1.jar (DocumentRoot.java:81)
2023-07-17 10:52:30 [weatherapp] DEBUG TomcatServletWebServerFactory - Code archive: C:\Users\Ravi\.m2\repository\org\springframework\boot\spring-boot\3.1.1\spring-boot-3.1.1.jar (DocumentRoot.java:125)
2023-07-17 10:52:30 [weatherapp] DEBUG TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored. (DocumentRoot.java:149)
2023-07-17 10:52:30 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 10:52:30 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:52:30 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:52:30 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 10:52:30 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 10:52:30 [weatherapp] DEBUG ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT] (ServletWebServerApplicationContext.java:285)
2023-07-17 10:52:30 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1144 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'webMvcObservationFilter' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration' via constructor to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration' via constructor to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'observationRegistry' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsObservationHandlerGrouping' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultMeterObservationHandler' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleMeterRegistry' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleConfig' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'simpleConfig' via factory method to bean named 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'micrometerClock' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'simpleConfig' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'micrometerClock' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertiesMeterFilter' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'propertiesMeterFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsHttpClientUriTagFilter' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'metricsHttpServerUriTagFilter' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'defaultMeterObservationHandler' via factory method to bean named 'simpleMeterRegistry' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'observationRegistry' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletEndpointRegistrar' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletEndpointDiscoverer' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointDiscoverer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@390a2aac' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'webEndpointPathMapper' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@390a2aac' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'servletExposeExcludePropertyEndpointFilter' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'servletExposeExcludePropertyEndpointFilter' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'servletEndpointDiscoverer' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'dispatcherServletRegistration' (ConstructorResolver.java:808)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG ServletContextInitializerBeans - Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105 (ServletContextInitializerBeans.java:234)
2023-07-17 10:52:30 [weatherapp] DEBUG ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/] (ServletContextInitializerBeans.java:234)
2023-07-17 10:52:30 [weatherapp] DEBUG OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use (GenericFilterBean.java:240)
2023-07-17 10:52:30 [weatherapp] DEBUG ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use (GenericFilterBean.java:240)
2023-07-17 10:52:30 [weatherapp] DEBUG OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use (GenericFilterBean.java:240)
2023-07-17 10:52:30 [weatherapp] DEBUG OrderedFormContentFilter - Filter 'formContentFilter' configured for use (GenericFilterBean.java:240)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'weatherApplication' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] DEBUG DefaultListableBeanFactory - Creating shared instance of singleton bean 'config' (DefaultSingletonBeanRegistry.java:225)
2023-07-17 10:52:30 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 10:52:30 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:52:30 [weatherapp] DEBUG Restarter - Creating new Restarter for thread Thread[#1,main,5,main] (DeferredLog.java:249)
2023-07-17 10:52:30 [weatherapp] DEBUG Restarter - Immediately restarting application (DeferredLog.java:249)
2023-07-17 10:52:30 [weatherapp] DEBUG Restarter - Starting application com.weather.microservice.WeatherApplication with URLs [file:/C:/Ravindra/weather/weather/WeatherApp/target/classes/] (DeferredLog.java:249)
2023-07-17 10:52:30 [weatherapp] DEBUG ConditionEvaluationReportLogger - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration matched:
      - @ConditionalOnMissingClass did not find unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:
      - @ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientObservationsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpExchangesEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:
      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)
      - @ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched (OnPropertyCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a single bean 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path logs (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   ObservationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)

   ObservationAutoConfiguration#observationRegistry matched:
      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration matched:
      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ObservationAutoConfiguration.OnlyMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateObservationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)
      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry' (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)

   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BatchObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)

   BraveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'brave.Tracer' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   DataSourceHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans of type javax.sql.DataSource (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   DataSourceTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DevToolsDataSourceAutoConfiguration:
      Did not match:
         - DevTools DataSource Condition did not find a single DataSource bean (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)
      Matched:
         - Devtools devtools enabled. (OnEnabledDevToolsCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   ElasticsearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.persistence.EntityManagerFactory' (OnClassCondition)

   HttpExchangesAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.httpexchanges.recording.enabled) matched (OnPropertyCondition)

   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#envInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#javaInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#osInfoContributor:
      Did not match:
         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LettuceMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.activation.MimeType' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MicrometerTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration:
      Did not match:
         - @ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer' (OnBeanCondition)
         - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer (OnBeanCondition)

   ObservationAutoConfiguration.MetricsWithTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   ObservationAutoConfiguration.OnlyTracingConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   OpenTelemetryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)

   OtlpMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusExemplarsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer' (OnClassCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveHealthEndpointConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.repository.Repository' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   ShutdownEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false (OnAvailableEndpointCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WavefrontTracingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientObservationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxObservationAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.transaction.TransactionManager' (OnClassCondition)

   ZipkinAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Sender' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration


 (ConditionEvaluationReportLogger.java:72)
2023-07-17 10:52:30 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'APIKEY' in value "${APIKEY}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 10:53:34 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 5184 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 10:53:34 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 10:53:34 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 10:53:34 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 10:53:35 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 10:53:35 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:53:35 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:53:35 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 10:53:35 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 10:53:35 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1135 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 10:53:35 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 10:53:35 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:53:35 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 10:53:35 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'APIKEY' in value "${APIKEY}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 10:54:57 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 20320 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 10:54:57 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 10:54:57 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 10:54:57 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 10:54:58 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 10:54:58 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:54:58 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:54:58 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 10:54:58 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 10:54:58 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1168 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 10:54:59 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 10:54:59 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 10:54:59 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:54:59 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 10:54:59 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 2.32 seconds (process running for 3.142) (StartupInfoLogger.java:57)
2023-07-17 10:55:00 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 10:55:00 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 10:55:00 [weatherapp] INFO DispatcherServlet - Completed initialization in 0 ms (FrameworkServlet.java:554)
2023-07-17 10:55:13 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 10:55:13 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 10:55:13 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 10:55:13 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 10:55:13 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 10:55:13 [weatherapp] ERROR [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Malformed escape pair at index 63: http://api.openweathermap.org/data/2.5/weather?q=vidisha&appid=%APIKEY%&units=metric&lang=en] with root cause (DirectJDKLog.java:175)
java.net.URISyntaxException: Malformed escape pair at index 63: http://api.openweathermap.org/data/2.5/weather?q=vidisha&appid=%APIKEY%&units=metric&lang=en
	at java.base/java.net.URI$Parser.fail(URI.java:2963)
	at java.base/java.net.URI$Parser.scanEscape(URI.java:3091)
	at java.base/java.net.URI$Parser.scan(URI.java:3114)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3132)
	at java.base/java.net.URI$Parser.parseHierarchical(URI.java:3222)
	at java.base/java.net.URI$Parser.parse(URI.java:3164)
	at java.base/java.net.URI.<init>(URI.java:628)
	at java.base/java.net.URI.create(URI.java:909)
	at org.apache.http.client.methods.HttpGet.<init>(HttpGet.java:66)
	at com.weather.microservice.service.WeatherService.jsonWeatherResponse(WeatherService.java:60)
	at com.weather.microservice.service.WeatherService.getWeatherInfo(WeatherService.java:43)
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17 10:55:28 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 10:55:28 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 20320 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 10:55:28 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 10:55:28 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 10:55:28 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 283 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 10:55:28 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 10:55:28 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:55:28 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 10:55:28 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'APIKEY' in value "${APIKEY}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 10:58:30 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 20320 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 10:58:30 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 10:58:30 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 10:58:30 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:58:30 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:58:30 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 10:58:30 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 10:58:30 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 238 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 10:58:30 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 10:58:30 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:58:30 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 10:58:30 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'APIKEY' in value "${APIKEY}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 10:59:13 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 20320 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 10:59:13 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 10:59:13 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 10:59:13 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:59:13 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:59:13 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 10:59:13 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 10:59:13 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 237 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 10:59:13 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 10:59:13 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:59:14 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 10:59:14 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'weather.key' in value "${weather.key}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 10:59:17 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 20320 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 10:59:17 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 10:59:17 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 10:59:17 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:59:17 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:59:17 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 10:59:17 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 10:59:17 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 231 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 10:59:17 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 10:59:17 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:59:17 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 10:59:17 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'weather.key' in value "${weather.key}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 10:59:45 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 26804 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 10:59:45 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 10:59:45 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 10:59:45 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 10:59:46 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 10:59:46 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 10:59:46 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:59:46 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 10:59:46 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 10:59:46 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1048 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 10:59:46 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 10:59:46 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 10:59:46 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 10:59:46 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'weather.key' in value "${weather.key}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 11:00:17 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 4688 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:00:17 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:00:17 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 11:00:17 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 11:00:18 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:00:18 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:00:18 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:00:18 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:00:19 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:00:19 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1087 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:00:19 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 11:00:19 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:00:19 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 11:00:19 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'weather.key' in value "${weather.key}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 11:00:40 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 24008 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:00:40 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:00:40 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 11:00:40 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 11:00:41 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:00:41 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:00:41 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:00:41 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:00:41 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:00:41 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1199 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:00:42 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 11:00:42 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:00:42 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 11:00:42 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'weather.key' in value "${weather.key}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 11:01:01 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:01:01 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:01:01 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 11:01:01 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 11:01:02 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:01:02 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:01:02 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:01:02 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:01:02 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:01:02 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1165 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:01:03 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:01:03 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:01:03 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:01:03 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:01:03 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 2.304 seconds (process running for 3.021) (StartupInfoLogger.java:57)
2023-07-17 11:01:04 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:01:04 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:01:04 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:02:05 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:02:05 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:02:05 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:02:05 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:02:05 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 263 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:02:05 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:02:05 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:02:05 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:05 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:02:05 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.448 seconds (process running for 65.338) (StartupInfoLogger.java:57)
2023-07-17 11:02:05 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:02:10 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:02:10 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:02:10 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:02:10 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:02:10 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:02:10 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:02:10 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:02:10 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 401 (WeatherService.java:64)
2023-07-17 11:02:10 [weatherapp] INFO WeatherService - Weather fetched for null (WeatherService.java:46)
2023-07-17 11:02:10 [weatherapp] INFO WeatherService - Status : 401 (WeatherService.java:47)
2023-07-17 11:02:10 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [cod=401, message=Invalid API key. Please see https://openweathermap.org/faq#error401 for more info.] (WeatherController.java:54)
2023-07-17 11:02:50 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:02:50 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:02:50 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:02:50 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:02:50 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 225 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:02:50 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:02:50 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:02:50 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:02:50 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:02:50 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.392 seconds (process running for 110.557) (StartupInfoLogger.java:57)
2023-07-17 11:02:50 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:02:52 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:02:52 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:02:52 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:02:52 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:02:52 [weatherapp] INFO WeatherController - weather key : null (WeatherController.java:52)
2023-07-17 11:02:52 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:02:52 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:02:52 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:02:52 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 401 (WeatherService.java:64)
2023-07-17 11:02:53 [weatherapp] INFO WeatherService - Weather fetched for null (WeatherService.java:46)
2023-07-17 11:02:53 [weatherapp] INFO WeatherService - Status : 401 (WeatherService.java:47)
2023-07-17 11:02:53 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [cod=401, message=Invalid API key. Please see https://openweathermap.org/faq#error401 for more info.] (WeatherController.java:55)
2023-07-17 11:03:10 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:03:10 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:03:10 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:03:10 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:03:10 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 222 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:03:10 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:03:10 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:03:10 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:10 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:03:10 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.392 seconds (process running for 130.557) (StartupInfoLogger.java:57)
2023-07-17 11:03:10 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:03:12 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:03:12 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:03:12 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:03:12 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:03:12 [weatherapp] INFO WeatherController - weather key : null (WeatherController.java:52)
2023-07-17 11:03:12 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:03:12 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:03:12 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:03:12 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 401 (WeatherService.java:64)
2023-07-17 11:03:12 [weatherapp] INFO WeatherService - Weather fetched for null (WeatherService.java:46)
2023-07-17 11:03:12 [weatherapp] INFO WeatherService - Status : 401 (WeatherService.java:47)
2023-07-17 11:03:12 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [cod=401, message=Invalid API key. Please see https://openweathermap.org/faq#error401 for more info.] (WeatherController.java:55)
2023-07-17 11:03:23 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:03:23 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:03:23 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:03:23 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:03:23 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 215 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:03:23 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:03:23 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:03:23 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:03:23 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:03:23 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.368 seconds (process running for 143.462) (StartupInfoLogger.java:57)
2023-07-17 11:03:23 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:03:25 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:03:25 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:03:25 [weatherapp] INFO DispatcherServlet - Completed initialization in 0 ms (FrameworkServlet.java:554)
2023-07-17 11:03:25 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:03:25 [weatherapp] INFO WeatherController - weather key : null (WeatherController.java:52)
2023-07-17 11:03:25 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:03:25 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:03:25 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:03:25 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 401 (WeatherService.java:64)
2023-07-17 11:03:25 [weatherapp] INFO WeatherService - Weather fetched for null (WeatherService.java:46)
2023-07-17 11:03:25 [weatherapp] INFO WeatherService - Status : 401 (WeatherService.java:47)
2023-07-17 11:03:25 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [cod=401, message=Invalid API key. Please see https://openweathermap.org/faq#error401 for more info.] (WeatherController.java:55)
2023-07-17 11:03:27 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:03:27 [weatherapp] INFO WeatherController - weather key : null (WeatherController.java:52)
2023-07-17 11:03:27 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:03:27 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:03:27 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:03:28 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 401 (WeatherService.java:64)
2023-07-17 11:03:28 [weatherapp] INFO WeatherService - Weather fetched for null (WeatherService.java:46)
2023-07-17 11:03:28 [weatherapp] INFO WeatherService - Status : 401 (WeatherService.java:47)
2023-07-17 11:03:28 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [cod=401, message=Invalid API key. Please see https://openweathermap.org/faq#error401 for more info.] (WeatherController.java:55)
2023-07-17 11:04:20 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:04:20 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:04:20 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:04:20 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:04:20 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 222 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:04:20 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:04:20 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:04:20 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:20 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:04:20 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.378 seconds (process running for 200.754) (StartupInfoLogger.java:57)
2023-07-17 11:04:20 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:04:23 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:04:23 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:04:23 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:04:23 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:04:23 [weatherapp] ERROR [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "String.toString()" because the return value of "java.lang.System.getenv(String)" is null] with root cause (DirectJDKLog.java:175)
java.lang.NullPointerException: Cannot invoke "String.toString()" because the return value of "java.lang.System.getenv(String)" is null
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17 11:04:42 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:04:42 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:04:42 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:04:42 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:04:42 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 223 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:04:42 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:04:42 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:04:42 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:04:42 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:04:42 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.377 seconds (process running for 222.75) (StartupInfoLogger.java:57)
2023-07-17 11:04:42 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:04:44 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:04:44 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:04:44 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:04:44 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:04:44 [weatherapp] ERROR [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "String.toString()" because the return value of "java.lang.System.getenv(String)" is null] with root cause (DirectJDKLog.java:175)
java.lang.NullPointerException: Cannot invoke "String.toString()" because the return value of "java.lang.System.getenv(String)" is null
	at com.weather.microservice.Controller.WeatherController.getWeather(WeatherController.java:51)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2023-07-17 11:06:17 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:06:17 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:06:17 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:06:17 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:06:17 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 243 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:06:17 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:06:17 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:06:17 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:17 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:06:17 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.487 seconds (process running for 317.398) (StartupInfoLogger.java:57)
2023-07-17 11:06:17 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:06:19 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:06:19 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:06:19 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:06:19 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:06:19 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:06:19 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:06:19 [weatherapp] INFO WeatherController - Environment Variable Ravi (WeatherController.java:53)
2023-07-17 11:06:19 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:06:19 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:06:19 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:06:19 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:06:19 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:06:19 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:06:39 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:06:39 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:06:39 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:06:39 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:06:39 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 219 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:06:39 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:06:39 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:06:39 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:39 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:06:39 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.368 seconds (process running for 339.378) (StartupInfoLogger.java:57)
2023-07-17 11:06:39 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:06:45 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:06:45 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35560 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:06:45 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:06:45 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:06:45 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 216 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:06:45 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:06:45 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:06:45 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:06:45 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:06:45 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.369 seconds (process running for 345.241) (StartupInfoLogger.java:57)
2023-07-17 11:06:45 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:06:48 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:06:48 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:06:48 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:06:48 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:06:48 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:06:48 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:06:48 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:06:48 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:06:48 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:06:48 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:06:48 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:06:48 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:06:48 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:07:11 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:07:11 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:07:11 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:07:11 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:07:11 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:07:11 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:07:12 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:07:12 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:07:12 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:07:12 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:07:19 [weatherapp] INFO SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested. (SpringApplicationAdminMXBeanRegistrar.java:159)
2023-07-17 11:07:19 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:19 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:07:19 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:07:19 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:19 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:22 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 10260 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:07:22 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:07:22 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 11:07:22 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 11:07:23 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:07:23 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:23 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:07:23 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:07:23 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:07:23 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1169 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:07:24 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:07:24 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:07:24 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:24 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:07:24 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 2.483 seconds (process running for 3.149) (StartupInfoLogger.java:57)
2023-07-17 11:07:25 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:07:25 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:07:25 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:07:40 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:07:40 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:07:40 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:07:40 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:07:40 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:07:40 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:07:40 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:07:40 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:07:40 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:07:40 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:07:55 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:07:55 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 10260 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:07:55 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:07:55 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:07:55 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 255 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:07:55 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:07:55 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:07:55 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:07:55 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:07:55 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.437 seconds (process running for 34.181) (StartupInfoLogger.java:57)
2023-07-17 11:07:55 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:07:58 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:07:58 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:07:58 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:07:58 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:07:58 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:07:58 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:07:58 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:07:58 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:07:58 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:07:58 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:07:58 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:07:58 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:07:58 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:08:13 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:08:13 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 10260 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:08:13 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:08:13 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:08:13 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 247 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:08:13 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:08:13 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:08:13 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:08:13 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:08:13 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.412 seconds (process running for 52.178) (StartupInfoLogger.java:57)
2023-07-17 11:08:13 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:08:16 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:08:16 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:08:16 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:08:16 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:08:16 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:08:16 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:08:16 [weatherapp] INFO WeatherController - Environment Variable : C:\Program Files\Java\jdk-20 (WeatherController.java:53)
2023-07-17 11:08:16 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:08:16 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:08:16 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:08:16 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:08:16 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:08:16 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:10:11 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:10:11 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 10260 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:10:11 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:10:11 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:10:11 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 223 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:10:11 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:10:11 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:10:11 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:10:11 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:10:11 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.383 seconds (process running for 169.984) (StartupInfoLogger.java:57)
2023-07-17 11:10:11 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:10:13 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:10:13 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:10:13 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:10:13 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:10:13 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:10:13 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:10:13 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:10:13 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:10:13 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:10:13 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:10:13 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:10:13 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:10:13 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:10:17 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:10:17 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:10:17 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:10:17 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:10:17 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:10:17 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:10:17 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:10:17 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:10:17 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:10:17 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:11:15 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:11:15 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:11:15 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:11:15 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:11:15 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:11:15 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:11:15 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:11:15 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:11:15 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:11:15 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:11:18 [weatherapp] INFO SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested. (SpringApplicationAdminMXBeanRegistrar.java:159)
2023-07-17 11:11:18 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:11:18 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:11:18 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:11:18 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:11:18 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:11:23 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 18268 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:11:23 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:11:23 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 11:11:23 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 11:11:24 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:11:24 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:11:24 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:11:24 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:11:24 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:11:24 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1114 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:11:25 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:11:25 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:11:25 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:11:25 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:11:25 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 2.227 seconds (process running for 2.948) (StartupInfoLogger.java:57)
2023-07-17 11:11:26 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:11:26 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:11:26 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:11:32 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:11:32 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:11:32 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:11:32 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:11:32 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:11:32 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:11:32 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:11:32 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:11:32 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:11:32 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:12:48 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:12:48 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:12:48 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:12:48 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:12:48 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:12:48 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:12:48 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:12:48 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:12:48 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:12:48 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:12:51 [weatherapp] INFO SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested. (SpringApplicationAdminMXBeanRegistrar.java:159)
2023-07-17 11:12:51 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:12:51 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:12:51 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:12:51 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:12:55 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:12:55 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:12:55 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 11:12:55 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 11:12:56 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:12:56 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:12:56 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:12:56 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:12:56 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:12:56 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1055 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:12:56 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:12:56 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:12:56 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:12:56 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:12:56 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 2.117 seconds (process running for 2.783) (StartupInfoLogger.java:57)
2023-07-17 11:12:58 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:12:58 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:12:58 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:13:00 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:13:00 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:13:00 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:13:00 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:13:00 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:13:00 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:13:00 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:13:00 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:13:00 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:13:00 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:13:14 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:13:14 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:13:14 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:13:14 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:13:14 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 254 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:13:14 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:13:14 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:13:14 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:14 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:13:14 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.436 seconds (process running for 20.758) (StartupInfoLogger.java:57)
2023-07-17 11:13:14 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:13:16 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:13:16 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:13:16 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:13:16 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:13:16 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:13:16 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:13:16 [weatherapp] INFO WeatherController - Environment Variable : null (WeatherController.java:53)
2023-07-17 11:13:16 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:13:16 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:13:16 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:13:16 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:13:16 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:13:16 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:13:52 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:13:52 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:13:52 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:13:52 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:13:52 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 230 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:13:52 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:13:52 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:13:52 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:13:52 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:13:52 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.396 seconds (process running for 58.886) (StartupInfoLogger.java:57)
2023-07-17 11:13:52 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:13:56 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:13:56 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:13:56 [weatherapp] INFO DispatcherServlet - Completed initialization in 0 ms (FrameworkServlet.java:554)
2023-07-17 11:13:56 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:13:56 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:13:56 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:13:56 [weatherapp] INFO WeatherController - Environment Variable : nullnull (WeatherController.java:53)
2023-07-17 11:13:56 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:13:56 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:13:56 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:13:56 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:13:56 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:13:56 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:14:05 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:14:05 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:14:05 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:14:05 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:14:05 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 220 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:14:05 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:14:05 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:14:05 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:05 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:14:05 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.383 seconds (process running for 71.831) (StartupInfoLogger.java:57)
2023-07-17 11:14:05 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:14:21 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:14:21 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:14:21 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:14:21 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:14:21 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 218 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:14:21 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:14:21 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:14:21 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:21 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:14:21 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 0.379 seconds (process running for 87.775) (StartupInfoLogger.java:57)
2023-07-17 11:14:21 [weatherapp] INFO ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged (ConditionEvaluationDeltaLoggingListener.java:63)
2023-07-17 11:14:25 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:14:25 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:14:25 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:14:25 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:14:25 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:14:25 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:14:25 [weatherapp] INFO WeatherController - Environment Variable : null null (WeatherController.java:53)
2023-07-17 11:14:25 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:14:25 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:14:25 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:14:25 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:14:25 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:14:25 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=804, main=Clouds, description=overcast clouds, icon=04d]], base=stations, main=Main [temp=30.25, feels_like=34.67, temp_min=30.25, temp_max=30.25, pressure=1002, humidity=66, sea_level=1002.0, grnd_level=956.0], visibility=10000, wind=Wind {speed=4.92, deg=298, gust=5.18}, clouds=Clouds [all=87], rain=null, snow=null, dt=1689572180, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:55)
2023-07-17 11:14:59 [weatherapp] INFO LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) (LocalDevToolsAutoConfiguration.java:211)
2023-07-17 11:14:59 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:14:59 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:14:59 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:14:59 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 214 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:14:59 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 11:14:59 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:14:59 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 11:14:59 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'ApiKey' in value "${ApiKey}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 11:15:22 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:15:22 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:15:22 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:15:22 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:15:22 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:15:22 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:15:22 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:15:22 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 214 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:15:22 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 11:15:22 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:15:22 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 11:15:22 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'ApiKey' in value "${ApiKey}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 11:15:31 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:15:31 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:15:31 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:15:31 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:15:31 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:15:31 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:15:31 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:15:31 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 216 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:15:31 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 11:15:31 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:15:31 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 11:15:31 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'ApiKey' in value "${ApiKey}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 11:21:49 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 35220 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:21:49 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:21:49 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:21:49 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:21:49 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:21:49 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:21:49 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:21:49 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 226 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:21:49 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 11:21:49 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:21:49 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 11:21:49 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'ApiKey' in value "${ApiKey}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 11:22:09 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 5756 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:22:09 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:22:09 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 11:22:09 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 11:22:10 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:22:11 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:22:11 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:22:11 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:22:11 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:22:11 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1129 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:22:11 [weatherapp] WARN AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed (AbstractApplicationContext.java:616)
2023-07-17 11:22:11 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:22:11 [weatherapp] INFO ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. (ConditionEvaluationReportLogger.java:82)
2023-07-17 11:22:11 [weatherapp] ERROR SpringApplication - Application run failed (SpringApplication.java:824)
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'config': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.weather.microservice.WeatherApplication.main(WeatherApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'ApiKey' in value "${ApiKey}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:191)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:920)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	... 20 common frames omitted
2023-07-17 11:22:30 [weatherapp] INFO WeatherApplication - Starting WeatherApplication using Java 20.0.1 with PID 28696 (C:\Ravindra\weather\weather\WeatherApp\target\classes started by Ravi in C:\Ravindra\weather\weather\WeatherApp) (StartupInfoLogger.java:51)
2023-07-17 11:22:30 [weatherapp] INFO WeatherApplication - No active profile set, falling back to 1 default profile: "default" (SpringApplication.java:634)
2023-07-17 11:22:30 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable (DeferredLog.java:250)
2023-07-17 11:22:30 [weatherapp] INFO DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' (DeferredLog.java:250)
2023-07-17 11:22:31 [weatherapp] INFO TomcatWebServer - Tomcat initialized with port(s): 8090 (http) (TomcatWebServer.java:108)
2023-07-17 11:22:31 [weatherapp] INFO Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:22:31 [weatherapp] INFO StandardService - Starting service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:22:31 [weatherapp] INFO StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10] (DirectJDKLog.java:173)
2023-07-17 11:22:31 [weatherapp] INFO [/] - Initializing Spring embedded WebApplicationContext (DirectJDKLog.java:173)
2023-07-17 11:22:31 [weatherapp] INFO ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1216 ms (ServletWebServerApplicationContext.java:291)
2023-07-17 11:22:32 [weatherapp] INFO OptionalLiveReloadServer - LiveReload server is running on port 35729 (OptionalLiveReloadServer.java:59)
2023-07-17 11:22:32 [weatherapp] INFO EndpointLinksResolver - Exposing 14 endpoint(s) beneath base path '/actuator' (EndpointLinksResolver.java:58)
2023-07-17 11:22:32 [weatherapp] INFO Http11NioProtocol - Starting ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:22:32 [weatherapp] INFO TomcatWebServer - Tomcat started on port(s): 8090 (http) with context path '' (TomcatWebServer.java:220)
2023-07-17 11:22:32 [weatherapp] INFO WeatherApplication - Started WeatherApplication in 2.435 seconds (process running for 3.228) (StartupInfoLogger.java:57)
2023-07-17 11:22:33 [weatherapp] INFO [/] - Initializing Spring DispatcherServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:22:33 [weatherapp] INFO DispatcherServlet - Initializing Servlet 'dispatcherServlet' (FrameworkServlet.java:532)
2023-07-17 11:22:33 [weatherapp] INFO DispatcherServlet - Completed initialization in 1 ms (FrameworkServlet.java:554)
2023-07-17 11:22:39 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:22:39 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:22:39 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - USERDOMAIN_ROAMINGPROFILE:LAPTOP-18NVM68C (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - JetBrains Gateway:C:\Program Files\JetBrains\JetBrains Gateway 2023.1.2\bin; (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - PROCESSOR_LEVEL:23 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - SESSIONNAME:Console (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - ALLUSERSPROFILE:C:\ProgramData (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - PROCESSOR_ARCHITECTURE:AMD64 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - PSModulePath:C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - SystemDrive:C: (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - MAVEN_HOME:C:\Users\Ravi\Downloads\apache-maven-4.0.0-alpha-3-bin\apache-maven-4.0.0-alpha-3 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - USERNAME:Ravi (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - ProgramFiles(x86):C:\Program Files (x86) (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - FPS_BROWSER_USER_PROFILE_STRING:Default (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - EFC_20852:1 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - PATHEXT:.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - DriverData:C:\Windows\System32\Drivers\DriverData (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - OneDriveConsumer:C:\Users\Ravi\OneDrive (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - IntelliJ IDEA Community Edition:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.1.2\bin; (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - ProgramData:C:\ProgramData (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - ProgramW6432:C:\Program Files (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - HOMEPATH:\Users\Ravi (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - PROCESSOR_IDENTIFIER:AMD64 Family 23 Model 96 Stepping 1, AuthenticAMD (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - M2_HOME:C:\Users\Ravi\Downloads\apache-maven-4.0.0-alpha-3-bin\apache-maven-4.0.0-alpha-3 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - ProgramFiles:C:\Program Files (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - PUBLIC:C:\Users\Public (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - windir:C:\WINDOWS (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - =:::::\ (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - LOCALAPPDATA:C:\Users\Ravi\AppData\Local (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - USERDOMAIN:LAPTOP-18NVM68C (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - FPS_BROWSER_APP_PROFILE_STRING:Internet Explorer (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - LOGONSERVER:\\LAPTOP-18NVM68C (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - JAVA_HOME:C:\Program Files\Java\jdk-20 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - RlsSvcPort:22112 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - OneDrive:C:\Users\Ravi\OneDrive (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - APPDATA:C:\Users\Ravi\AppData\Roaming (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - VBOX_MSI_INSTALL_PATH:C:\Program Files\Oracle\VirtualBox\ (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - CommonProgramFiles:C:\Program Files\Common Files (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - Path:C:/Program Files/Java/jdk-20/bin/server;C:/Program Files/Java/jdk-20/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk-20\bin;C:\Users\Ravi\Downloads\apache-maven-4.0.0-alpha-3-bin\apache-maven-4.0.0-alpha-3\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Server 8.0\bin;%JAVA_HOME\bin%;C:\Program Files\nodejs\;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Users\Ravi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.1.2\bin;;C:\Users\Ravi\AppData\Local\JetBrains\Toolbox\scripts;C:\Program Files\JetBrains\JetBrains Gateway 2023.1.2\bin;;C:\Users\Ravi\AppData\Roaming\npm;C:\Users\Ravi\AppData\Local\Programs\Microsoft VS Code\bin;C:\WINDOWS\System32; (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - OS:Windows_NT (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - COMPUTERNAME:LAPTOP-18NVM68C (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - PROCESSOR_REVISION:6001 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - CommonProgramW6432:C:\Program Files\Common Files (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - ComSpec:C:\WINDOWS\system32\cmd.exe (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - SystemRoot:C:\WINDOWS (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - TEMP:C:\Users\Ravi\AppData\Local\Temp (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - HOMEDRIVE:C: (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - USERPROFILE:C:\Users\Ravi (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - TMP:C:\Users\Ravi\AppData\Local\Temp (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - CommonProgramFiles(x86):C:\Program Files (x86)\Common Files (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - NUMBER_OF_PROCESSORS:16 (WeatherController.java:56)
2023-07-17 11:22:39 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:22:39 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:22:39 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:22:39 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:22:39 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:22:39 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=803, main=Clouds, description=broken clouds, icon=04d]], base=stations, main=Main [temp=30.57, feels_like=35.66, temp_min=30.57, temp_max=30.57, pressure=1001, humidity=67, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.21, deg=306, gust=5.89}, clouds=Clouds [all=84], rain=null, snow=null, dt=1689573160, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:58)
2023-07-17 11:25:58 [weatherapp] INFO Config - API_URL fetched (Config.java:36)
2023-07-17 11:25:58 [weatherapp] INFO Config - API_KEY fetched (Config.java:32)
2023-07-17 11:25:58 [weatherapp] INFO Config - API_PARAMS fetched (Config.java:41)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - USERDOMAIN_ROAMINGPROFILE:LAPTOP-18NVM68C (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - JetBrains Gateway:C:\Program Files\JetBrains\JetBrains Gateway 2023.1.2\bin; (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - PROCESSOR_LEVEL:23 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - SESSIONNAME:Console (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - ALLUSERSPROFILE:C:\ProgramData (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - PROCESSOR_ARCHITECTURE:AMD64 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - PSModulePath:C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - SystemDrive:C: (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - MAVEN_HOME:C:\Users\Ravi\Downloads\apache-maven-4.0.0-alpha-3-bin\apache-maven-4.0.0-alpha-3 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - USERNAME:Ravi (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - ProgramFiles(x86):C:\Program Files (x86) (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - FPS_BROWSER_USER_PROFILE_STRING:Default (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - EFC_20852:1 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - PATHEXT:.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - DriverData:C:\Windows\System32\Drivers\DriverData (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - OneDriveConsumer:C:\Users\Ravi\OneDrive (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - IntelliJ IDEA Community Edition:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.1.2\bin; (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - ProgramData:C:\ProgramData (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - ProgramW6432:C:\Program Files (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - HOMEPATH:\Users\Ravi (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - PROCESSOR_IDENTIFIER:AMD64 Family 23 Model 96 Stepping 1, AuthenticAMD (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - M2_HOME:C:\Users\Ravi\Downloads\apache-maven-4.0.0-alpha-3-bin\apache-maven-4.0.0-alpha-3 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - ProgramFiles:C:\Program Files (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - PUBLIC:C:\Users\Public (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - windir:C:\WINDOWS (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - =:::::\ (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - LOCALAPPDATA:C:\Users\Ravi\AppData\Local (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - USERDOMAIN:LAPTOP-18NVM68C (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - FPS_BROWSER_APP_PROFILE_STRING:Internet Explorer (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - LOGONSERVER:\\LAPTOP-18NVM68C (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - JAVA_HOME:C:\Program Files\Java\jdk-20 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - RlsSvcPort:22112 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - OneDrive:C:\Users\Ravi\OneDrive (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - APPDATA:C:\Users\Ravi\AppData\Roaming (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - VBOX_MSI_INSTALL_PATH:C:\Program Files\Oracle\VirtualBox\ (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - CommonProgramFiles:C:\Program Files\Common Files (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - Path:C:/Program Files/Java/jdk-20/bin/server;C:/Program Files/Java/jdk-20/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk-20\bin;C:\Users\Ravi\Downloads\apache-maven-4.0.0-alpha-3-bin\apache-maven-4.0.0-alpha-3\bin;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Server 8.0\bin;%JAVA_HOME\bin%;C:\Program Files\nodejs\;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Users\Ravi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.1.2\bin;;C:\Users\Ravi\AppData\Local\JetBrains\Toolbox\scripts;C:\Program Files\JetBrains\JetBrains Gateway 2023.1.2\bin;;C:\Users\Ravi\AppData\Roaming\npm;C:\Users\Ravi\AppData\Local\Programs\Microsoft VS Code\bin;C:\WINDOWS\System32; (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - OS:Windows_NT (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - COMPUTERNAME:LAPTOP-18NVM68C (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - PROCESSOR_REVISION:6001 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - CommonProgramW6432:C:\Program Files\Common Files (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - ComSpec:C:\WINDOWS\system32\cmd.exe (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - SystemRoot:C:\WINDOWS (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - TEMP:C:\Users\Ravi\AppData\Local\Temp (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - HOMEDRIVE:C: (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - USERPROFILE:C:\Users\Ravi (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - TMP:C:\Users\Ravi\AppData\Local\Temp (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - CommonProgramFiles(x86):C:\Program Files (x86)\Common Files (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - NUMBER_OF_PROCESSORS:16 (WeatherController.java:56)
2023-07-17 11:25:58 [weatherapp] INFO WeatherService - City with space : vidisha (WeatherService.java:71)
2023-07-17 11:25:58 [weatherapp] INFO WeatherService - City with no space : vidisha (WeatherService.java:77)
2023-07-17 11:25:58 [weatherapp] INFO WeatherService - response inside class com.weather.microservice.service.WeatherService: 200 (WeatherService.java:64)
2023-07-17 11:25:58 [weatherapp] INFO WeatherService - Weather fetched for Vidisha (WeatherService.java:46)
2023-07-17 11:25:58 [weatherapp] INFO WeatherService - Status : 200 (WeatherService.java:47)
2023-07-17 11:25:58 [weatherapp] INFO WeatherController - getWeatherInfo(vidisha) : WeatherInfo [coord=Coord [lon=77.8167, lat=23.5333], weather=[Weather [id=803, main=Clouds, description=broken clouds, icon=04d]], base=stations, main=Main [temp=30.57, feels_like=35.66, temp_min=30.57, temp_max=30.57, pressure=1001, humidity=67, sea_level=1001.0, grnd_level=955.0], visibility=10000, wind=Wind {speed=5.21, deg=306, gust=5.89}, clouds=Clouds [all=84], rain=null, snow=null, dt=1689573160, sys=Sys [type=null, id=null, country=IN, sunrise=1689552696, sunset=1689601059, pod=null], timezone=19800, id=1253200, name=Vidisha, cod=200, message=null, pop=null, dt_txt=null] (WeatherController.java:58)
2023-07-17 11:26:06 [weatherapp] INFO SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested. (SpringApplicationAdminMXBeanRegistrar.java:159)
2023-07-17 11:26:06 [weatherapp] INFO Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:26:06 [weatherapp] INFO StandardService - Stopping service [Tomcat] (DirectJDKLog.java:173)
2023-07-17 11:26:06 [weatherapp] INFO [/] - Destroying Spring FrameworkServlet 'dispatcherServlet' (DirectJDKLog.java:173)
2023-07-17 11:26:06 [weatherapp] INFO Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
2023-07-17 11:26:06 [weatherapp] INFO Http11NioProtocol - Destroying ProtocolHandler ["http-nio-8090"] (DirectJDKLog.java:173)
